{
  "id": "aelchimminut/fruits262",
  "id_no": 1316246,
  "datasetSlugNullable": "fruits262",
  "ownerUserNullable": "aelchimminut",
  "usabilityRatingNullable": 0.875,
  "titleNullable": "Fruits-262",
  "subtitleNullable": "A dataset containing 225,640 images of 262 different fruits",
  "descriptionNullable": "# Fruits-262 dataset: A dataset containing a vast majority of the popular and known fruits\n\n\n## Versions and Updates: \n\nThe dataset's final version is the one presented here. No expectations for further development of the dataset at this moment.\n\nIf there seem to be any problems with the dataset, its descriptions, its properties or anything at all please contact me and I will help in what ways I can.\n\n### 15/12/2021 - SYNASC2021 Paper\nBased on the Bachelor's Thesis, a paper has been built and published at the SYNASC 2021 conference.\n\n### 25/05/2021 - Bachelor's Thesis\nThe thesis, that had at its core building this fruit dataset and training CNN models on it, is finished and has been added.\nInformation about the tasks and phases through which the dataset has been can also be found within the thesis.\n\n### 25/05/2021 - Resized Dataset and Useful Scripts.\nThe resized dataset has been uploaded on 5 different dimensions along with some scripts that help in organizing and altering the dataset.\nThe deployment took around 3-4 hours since some errors kept appearing when uploading. Sorry for any inconvenience.\n\n## Content\n\nThe following fruit types/labels/clades are included:\nabiu, acai, acerola, ackee, alligator apple, ambarella, apple, apricot, araza, avocado, bael, banana, barbadine, barberry, bayberry, beach plum, bearberry, bell pepper, betel nut, bignay, bilimbi, bitter gourd, black berry, black cherry, black currant, black mullberry, black sapote, blueberry, bolwarra, bottle gourd, brazil nut, bread fruit, buddha s hand, buffaloberry, burdekin plum, burmese grape, caimito, camu camu, canistel, cantaloupe, cape gooseberry, carambola, cardon, cashew, cedar bay cherry, cempedak, ceylon gooseberry, che, chenet, cherimoya, cherry, chico, chokeberry, clementine, cloudberry, cluster fig, cocoa bean, coconut, coffee, common buckthorn, corn kernel, cornelian cherry, crab apple, cranberry, crowberry, cupuacu, custard apple, damson, date, desert fig, desert lime, dewberry, dragonfruit, durian, eggplant, elderberry, elephant apple, emblic, entawak, etrog, feijoa, fibrous satinash, fig, finger lime, galia melon, gandaria, genipap, goji, gooseberry, goumi, grape, grapefruit, greengage, grenadilla, guanabana, guarana, guava, guavaberry, hackberry, hard kiwi, hawthorn, hog plum, honeyberry, honeysuckle, horned melon, illawarra plum, indian almond, indian strawberry, ita palm, jaboticaba, jackfruit, jalapeno, jamaica cherry, jambul, japanese raisin, jasmine, jatoba, jocote, jostaberry, jujube, juniper berry, kaffir lime, kahikatea, kakadu plum, keppel, kiwi, kumquat, kundong, kutjera, lablab, langsat, lapsi, lemon, lemon aspen, leucaena, lillipilli, lime, lingonberry, loganberry, longan, loquat, lucuma, lulo, lychee, mabolo, macadamia, malay apple, mamey apple, mandarine, mango, mangosteen, manila tamarind, marang, mayhaw, maypop, medlar, melinjo, melon pear, midyim, miracle fruit, mock strawberry, monkfruit, monstera deliciosa, morinda, mountain papaya, mountain soursop, mundu, muskmelon, myrtle, nance, nannyberry, naranjilla, native cherry, native gooseberry, nectarine, neem, nungu, nutmeg, oil palm, old world sycomore, olive, orange, oregon grape, otaheite apple, papaya, passion fruit, pawpaw, pea, peanut, pear, pequi, persimmon, pigeon plum, pigface, pili nut, pineapple, pineberry, pitomba, plumcot, podocarpus, pomegranate, pomelo, prikly pear, pulasan, pumpkin, pupunha, purple apple berry, quandong, quince, rambutan, rangpur, raspberry, red mulberry, redcurrant, riberry, ridged gourd, rimu, rose hip, rose myrtle, rose-leaf bramble, saguaro, salak, salal, salmonberry, sandpaper fig, santol, sapodilla, saskatoon, sea buckthorn, sea grape, snowberry, soncoya, strawberry, strawberry guava, sugar apple, surinam cherry, sycamore fig, tamarillo, tangelo, tanjong, taxus baccata, tayberry, texas persimmon, thimbleberry, tomato, toyon, ugli fruit, vanilla, velvet tamarind, watermelon, wax gourd, white aspen, white currant, white mulberry, white sapote, wineberry, wongi, yali pear, yellow plum, yuzu, zigzag vine, zucchini\n\n\n## Dataset properties\n\nTotal number of images: 225,640.\n\nNumber of classes: 262 fruits.\n\nNumber of images per label: Average: 861, Median: 1007, StDev: 276. (Initial target was 1,000 per label)\n\nImage Width: Average: 213, Median: 209, StDev: 19. \n\nImage Height: Average: 262, Median: 255, StDev: 30. \n\nMissing Images from the initial 1,000 target: Average: 580, Median: 567, StDev: 258.\n\nFormat: a directory name represents a label and in each directory all the image data under the said label (the images are numbered but there might be missing numbers. The \"renumber.py\" script, if run, will fix the number gap problem).\n\nDifferent varieties of the same fruit are generally stored in the same directory (Example: green, yellow and red apple).\n\nThe fruit images present in the dataset can contain the fruit in all the stages of its life and also can contain slices of the fruit. \n\nImages contain at least 50% fruit information (according to the manual filtering selection paradigm).\n\nThe background of the images can be anything (due to the nature of the data): monochromatic backgrounds, human hands, natural habitats of the fruit, leaves etc.\n\nThere are no duplicate images but there are some images (of the same label) with a high degree of similarity.\n\nImages can contain small watermarks.\n\nSome fruits which had between 50-100 usable images still remain in the dataset, but can be discarded for a better balance and lesser variety. This is also one big reason for the high variance in the missing images statistic provided above.\n\n\n## Resized Dataset\nWith the help of the \"resize.py\" script the raw dataset has been standardised on the dimensions 13x16, 26x32, 52x64, 104x128, 208x256.\nThese specific dimensions come from the average dimension statistics provided above. The goal was to lose as little fruit information as possible.\nThe algorithm used for resizing within the script is provided in the useful scripts section.\n\nAdditional Remarks:\nThe process of resizing can be delicate and also take a long time.\nHaving the same resized dataset used within multiple experiments will provide much better insights when comparing results.\nIf somebody wants to work with the raw dataset, it can still be done.\nIf somebody wants different dimensions but with the same algorithm, they can use the \"resize.py\" script to obtain them.\nMore explanations can be found within the scripts or the thesis.\n\n## Useful scripts - Short Description\nresize.py - resizes the images for given dimensions with antialiasing for better quality.\nrenumber.py - renumbers the files within a directory.\nlabel\\_dictionary.py - creates dictionary for label-number mapping.\nstatistics.py - generates statistics on the dataset.\nefficient\\_storage.py - transforms the images in big numpy arrays and stores them in \".npz\" format. Useful for improving IO load times.\ntest\\_model.py - test model against a pack of \".npz\" data and produces statistics for each label accuracy for top 1,5 and 10 predictions.\nload\\_and\\_predict.py - app with GUI that allows selection of models and images and performs predictions and statistics.\n\nAdditional Remarks:\nSome scripts are worth running only if using a HDD for storage.\nPython version for modules and libraries is 3.7.\nDirect-ml (AMD GPU) library used for Tensorflow. Replace \"tensorflow.compat.v1\" calls with standard API calls otherwise.\nMore explanations can be found within the scripts or the thesis.\nThe scripts are there to be helpful and by far are not mandatory for the dataset to work.\n\n## How it was built\n\nAll of the images come from the said engines but the raw information suffered many transformations to get to the current iteration. \n\nThe import phase (2 months) has been done with the use of a python3-selenium web crawling algorithm that has been run on multiple threads and chrome web drivers.\n\nThe labels were obtained from various popular websites, initially being around 500. The number scaled down to 400 and then to 300 after eliminating duplicates and semantic duplicates. The import phase failed to find related images for some of the labels and in the end there were 293 labels of raw data. The last 31 lost labels were discarded during the manual filtering phase of the project. \n\nEach fruit was searched by using multiple of its known names combined with keywords to increase the variety of the image search results.\n\nThe automatic filtering has been done at import time and after the import was done and it included filters for images too small (lower than 64x64 pixels), with dimension ratio too big (more than 1:2), with different formats, corrupted and with the same content (duplicate hash elimination method, duplicate src check).\n\nThe dataset had 2.6 million images for 293 fruit labels after the automatic filtering but the data had too much noise to be usable. This dataset is significantly bigger, amounting to around 60-70GB of data, it can also be uploaded given the need.\n\nThe manual filtering has been done with the help of the people listed as co-authors, each filtering a portion of the labels. The use of a paradigm for selection helped in increasing the quality while also making the process itself more efficient, by the end only taking 2 months. Some labels only had noise and no real data associated with the fruit and as a result were eliminated.\n\nThe result is the dataset that resides here. Most of the steps were simplified in explanation, there is more information on how the decisions were made and statistics on the Bachelor Thesis I am currently writing (a reference will appear after the thesis is finished) about building a fruit dataset and applying CNN's on it.\n\n\n## Bachelor's Thesis\n\n\"Fruits Dataset. Fruits Classification.\" represents the Bachelor's thesis which I, Minu\u021b Mihai-Dimitrie, coordinated by Prof. Dr. Iftene Adrian, have developed in one year of time. \n\nThe final result features:\n- the \"Fruits-262\" dataset;\n-  different methods to improve data resizing, storage, loading and handling;\n- several popular CNN architectures tests; \n- final training and classification pipelines which result in models with 58% test accuracy and 57% validation accuracy over the entire dataset (no labels nor images removed).\n- a base with all the code that has been used (https://github.com/Elaech/Fruits-262)\n\n\n## Dataset License\n\nAll of the images come from the public domain and therefor I do not claim to have any rights upon the dataset.\n\nThe dataset is safe to use for research and academic purposes but the usage in commercial purposes resides in a grey area.\nMore information regarding the usability can be found in the Bachelor's Thesis in the \"Public domain data\" section.\n\nThe resulted dataset itself is provided under CC0 1.0 Universal (CC0 1.0) - Public Domain Dedication\n\nThe person who associated a work with this deed has dedicated the work to the public domain by waiving all of his or her rights to the work worldwide under copyright law, including all related and neighboring rights, to the extent allowed by law.\n\nYou can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission.\n\n## Scripts License\n\nMIT License\n\nCopyright (c) 2020-2021 Minut Mihai Dimitrie, Adrian Iftene\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
  "datasetId": 1316246,
  "datasetSlug": "fruits262",
  "hasDatasetSlug": true,
  "ownerUser": "aelchimminut",
  "hasOwnerUser": true,
  "usabilityRating": 0.875,
  "hasUsabilityRating": true,
  "totalViews": 40483,
  "totalVotes": 141,
  "totalDownloads": 5495,
  "title": "Fruits-262",
  "hasTitle": true,
  "subtitle": "A dataset containing 225,640 images of 262 different fruits",
  "hasSubtitle": true,
  "description": "# Fruits-262 dataset: A dataset containing a vast majority of the popular and known fruits\n\n\n## Versions and Updates: \n\nThe dataset's final version is the one presented here. No expectations for further development of the dataset at this moment.\n\nIf there seem to be any problems with the dataset, its descriptions, its properties or anything at all please contact me and I will help in what ways I can.\n\n### 15/12/2021 - SYNASC2021 Paper\nBased on the Bachelor's Thesis, a paper has been built and published at the SYNASC 2021 conference.\n\n### 25/05/2021 - Bachelor's Thesis\nThe thesis, that had at its core building this fruit dataset and training CNN models on it, is finished and has been added.\nInformation about the tasks and phases through which the dataset has been can also be found within the thesis.\n\n### 25/05/2021 - Resized Dataset and Useful Scripts.\nThe resized dataset has been uploaded on 5 different dimensions along with some scripts that help in organizing and altering the dataset.\nThe deployment took around 3-4 hours since some errors kept appearing when uploading. Sorry for any inconvenience.\n\n## Content\n\nThe following fruit types/labels/clades are included:\nabiu, acai, acerola, ackee, alligator apple, ambarella, apple, apricot, araza, avocado, bael, banana, barbadine, barberry, bayberry, beach plum, bearberry, bell pepper, betel nut, bignay, bilimbi, bitter gourd, black berry, black cherry, black currant, black mullberry, black sapote, blueberry, bolwarra, bottle gourd, brazil nut, bread fruit, buddha s hand, buffaloberry, burdekin plum, burmese grape, caimito, camu camu, canistel, cantaloupe, cape gooseberry, carambola, cardon, cashew, cedar bay cherry, cempedak, ceylon gooseberry, che, chenet, cherimoya, cherry, chico, chokeberry, clementine, cloudberry, cluster fig, cocoa bean, coconut, coffee, common buckthorn, corn kernel, cornelian cherry, crab apple, cranberry, crowberry, cupuacu, custard apple, damson, date, desert fig, desert lime, dewberry, dragonfruit, durian, eggplant, elderberry, elephant apple, emblic, entawak, etrog, feijoa, fibrous satinash, fig, finger lime, galia melon, gandaria, genipap, goji, gooseberry, goumi, grape, grapefruit, greengage, grenadilla, guanabana, guarana, guava, guavaberry, hackberry, hard kiwi, hawthorn, hog plum, honeyberry, honeysuckle, horned melon, illawarra plum, indian almond, indian strawberry, ita palm, jaboticaba, jackfruit, jalapeno, jamaica cherry, jambul, japanese raisin, jasmine, jatoba, jocote, jostaberry, jujube, juniper berry, kaffir lime, kahikatea, kakadu plum, keppel, kiwi, kumquat, kundong, kutjera, lablab, langsat, lapsi, lemon, lemon aspen, leucaena, lillipilli, lime, lingonberry, loganberry, longan, loquat, lucuma, lulo, lychee, mabolo, macadamia, malay apple, mamey apple, mandarine, mango, mangosteen, manila tamarind, marang, mayhaw, maypop, medlar, melinjo, melon pear, midyim, miracle fruit, mock strawberry, monkfruit, monstera deliciosa, morinda, mountain papaya, mountain soursop, mundu, muskmelon, myrtle, nance, nannyberry, naranjilla, native cherry, native gooseberry, nectarine, neem, nungu, nutmeg, oil palm, old world sycomore, olive, orange, oregon grape, otaheite apple, papaya, passion fruit, pawpaw, pea, peanut, pear, pequi, persimmon, pigeon plum, pigface, pili nut, pineapple, pineberry, pitomba, plumcot, podocarpus, pomegranate, pomelo, prikly pear, pulasan, pumpkin, pupunha, purple apple berry, quandong, quince, rambutan, rangpur, raspberry, red mulberry, redcurrant, riberry, ridged gourd, rimu, rose hip, rose myrtle, rose-leaf bramble, saguaro, salak, salal, salmonberry, sandpaper fig, santol, sapodilla, saskatoon, sea buckthorn, sea grape, snowberry, soncoya, strawberry, strawberry guava, sugar apple, surinam cherry, sycamore fig, tamarillo, tangelo, tanjong, taxus baccata, tayberry, texas persimmon, thimbleberry, tomato, toyon, ugli fruit, vanilla, velvet tamarind, watermelon, wax gourd, white aspen, white currant, white mulberry, white sapote, wineberry, wongi, yali pear, yellow plum, yuzu, zigzag vine, zucchini\n\n\n## Dataset properties\n\nTotal number of images: 225,640.\n\nNumber of classes: 262 fruits.\n\nNumber of images per label: Average: 861, Median: 1007, StDev: 276. (Initial target was 1,000 per label)\n\nImage Width: Average: 213, Median: 209, StDev: 19. \n\nImage Height: Average: 262, Median: 255, StDev: 30. \n\nMissing Images from the initial 1,000 target: Average: 580, Median: 567, StDev: 258.\n\nFormat: a directory name represents a label and in each directory all the image data under the said label (the images are numbered but there might be missing numbers. The \"renumber.py\" script, if run, will fix the number gap problem).\n\nDifferent varieties of the same fruit are generally stored in the same directory (Example: green, yellow and red apple).\n\nThe fruit images present in the dataset can contain the fruit in all the stages of its life and also can contain slices of the fruit. \n\nImages contain at least 50% fruit information (according to the manual filtering selection paradigm).\n\nThe background of the images can be anything (due to the nature of the data): monochromatic backgrounds, human hands, natural habitats of the fruit, leaves etc.\n\nThere are no duplicate images but there are some images (of the same label) with a high degree of similarity.\n\nImages can contain small watermarks.\n\nSome fruits which had between 50-100 usable images still remain in the dataset, but can be discarded for a better balance and lesser variety. This is also one big reason for the high variance in the missing images statistic provided above.\n\n\n## Resized Dataset\nWith the help of the \"resize.py\" script the raw dataset has been standardised on the dimensions 13x16, 26x32, 52x64, 104x128, 208x256.\nThese specific dimensions come from the average dimension statistics provided above. The goal was to lose as little fruit information as possible.\nThe algorithm used for resizing within the script is provided in the useful scripts section.\n\nAdditional Remarks:\nThe process of resizing can be delicate and also take a long time.\nHaving the same resized dataset used within multiple experiments will provide much better insights when comparing results.\nIf somebody wants to work with the raw dataset, it can still be done.\nIf somebody wants different dimensions but with the same algorithm, they can use the \"resize.py\" script to obtain them.\nMore explanations can be found within the scripts or the thesis.\n\n## Useful scripts - Short Description\nresize.py - resizes the images for given dimensions with antialiasing for better quality.\nrenumber.py - renumbers the files within a directory.\nlabel\\_dictionary.py - creates dictionary for label-number mapping.\nstatistics.py - generates statistics on the dataset.\nefficient\\_storage.py - transforms the images in big numpy arrays and stores them in \".npz\" format. Useful for improving IO load times.\ntest\\_model.py - test model against a pack of \".npz\" data and produces statistics for each label accuracy for top 1,5 and 10 predictions.\nload\\_and\\_predict.py - app with GUI that allows selection of models and images and performs predictions and statistics.\n\nAdditional Remarks:\nSome scripts are worth running only if using a HDD for storage.\nPython version for modules and libraries is 3.7.\nDirect-ml (AMD GPU) library used for Tensorflow. Replace \"tensorflow.compat.v1\" calls with standard API calls otherwise.\nMore explanations can be found within the scripts or the thesis.\nThe scripts are there to be helpful and by far are not mandatory for the dataset to work.\n\n## How it was built\n\nAll of the images come from the said engines but the raw information suffered many transformations to get to the current iteration. \n\nThe import phase (2 months) has been done with the use of a python3-selenium web crawling algorithm that has been run on multiple threads and chrome web drivers.\n\nThe labels were obtained from various popular websites, initially being around 500. The number scaled down to 400 and then to 300 after eliminating duplicates and semantic duplicates. The import phase failed to find related images for some of the labels and in the end there were 293 labels of raw data. The last 31 lost labels were discarded during the manual filtering phase of the project. \n\nEach fruit was searched by using multiple of its known names combined with keywords to increase the variety of the image search results.\n\nThe automatic filtering has been done at import time and after the import was done and it included filters for images too small (lower than 64x64 pixels), with dimension ratio too big (more than 1:2), with different formats, corrupted and with the same content (duplicate hash elimination method, duplicate src check).\n\nThe dataset had 2.6 million images for 293 fruit labels after the automatic filtering but the data had too much noise to be usable. This dataset is significantly bigger, amounting to around 60-70GB of data, it can also be uploaded given the need.\n\nThe manual filtering has been done with the help of the people listed as co-authors, each filtering a portion of the labels. The use of a paradigm for selection helped in increasing the quality while also making the process itself more efficient, by the end only taking 2 months. Some labels only had noise and no real data associated with the fruit and as a result were eliminated.\n\nThe result is the dataset that resides here. Most of the steps were simplified in explanation, there is more information on how the decisions were made and statistics on the Bachelor Thesis I am currently writing (a reference will appear after the thesis is finished) about building a fruit dataset and applying CNN's on it.\n\n\n## Bachelor's Thesis\n\n\"Fruits Dataset. Fruits Classification.\" represents the Bachelor's thesis which I, Minu\u021b Mihai-Dimitrie, coordinated by Prof. Dr. Iftene Adrian, have developed in one year of time. \n\nThe final result features:\n- the \"Fruits-262\" dataset;\n-  different methods to improve data resizing, storage, loading and handling;\n- several popular CNN architectures tests; \n- final training and classification pipelines which result in models with 58% test accuracy and 57% validation accuracy over the entire dataset (no labels nor images removed).\n- a base with all the code that has been used (https://github.com/Elaech/Fruits-262)\n\n\n## Dataset License\n\nAll of the images come from the public domain and therefor I do not claim to have any rights upon the dataset.\n\nThe dataset is safe to use for research and academic purposes but the usage in commercial purposes resides in a grey area.\nMore information regarding the usability can be found in the Bachelor's Thesis in the \"Public domain data\" section.\n\nThe resulted dataset itself is provided under CC0 1.0 Universal (CC0 1.0) - Public Domain Dedication\n\nThe person who associated a work with this deed has dedicated the work to the public domain by waiving all of his or her rights to the work worldwide under copyright law, including all related and neighboring rights, to the extent allowed by law.\n\nYou can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission.\n\n## Scripts License\n\nMIT License\n\nCopyright (c) 2020-2021 Minut Mihai Dimitrie, Adrian Iftene\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "plants",
    "business",
    "education",
    "computer science",
    "programming",
    "image",
    "multiclass classification",
    "food"
  ],
  "licenses": [
    {
      "nameNullable": "CC0-1.0",
      "name": "CC0-1.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}