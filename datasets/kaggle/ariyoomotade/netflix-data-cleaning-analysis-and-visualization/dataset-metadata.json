{
  "id": "ariyoomotade/netflix-data-cleaning-analysis-and-visualization",
  "id_no": 2437124,
  "datasetSlugNullable": "netflix-data-cleaning-analysis-and-visualization",
  "ownerUserNullable": "ariyoomotade",
  "usabilityRatingNullable": 1.0,
  "titleNullable": "Netflix Data: Cleaning, Analysis and Visualization",
  "subtitleNullable": "Cleaning and Visualization with Pgsql and Tableau ",
  "descriptionNullable": "Netflix is a popular streaming service that offers a vast catalog of movies, TV shows, and original contents. This dataset is a cleaned version of the original version which can be found [here](https://www.kaggle.com/datasets/shivamb/netflix-shows). The data consist of contents added to Netflix from 2008 to 2021. The oldest content is as old as 1925 and the newest as 2021. This dataset will be cleaned with PostgreSQL and visualized with Tableau. The purpose of this dataset is to test my data cleaning and visualization skills. The cleaned data can be found below and the Tableau dashboard can be found [here](https://public.tableau.com/app/profile/abdulrasaq.ariyo/viz/NetflixTVShowsMovies_16615029026580/NetflixDashboard) .   \n\n## Data Cleaning\nWe are going to:\n1. Treat the Nulls \n2. Treat the duplicates\n3.  Populate missing rows\n4. Drop unneeded columns\n5. Split columns\nExtra steps and more explanation on the process will be explained through the code comments\n\n```\n--View dataset\n\nSELECT * \nFROM netflix;\n\n```\n\n```\n--The show_id column is the unique id for the dataset, therefore we are going to check for duplicates\n                                                                   \nSELECT show_id, COUNT(*)                                                                                                                                                                            \nFROM netflix \nGROUP BY show_id                                                                                                                                                                                            \nORDER BY show_id DESC;\n\n--No duplicates\n```\n\n```\n--Check null values across columns\n\nSELECT COUNT(*) FILTER (WHERE show_id IS NULL) AS showid_nulls,\n       COUNT(*) FILTER (WHERE type IS NULL) AS type_nulls,\n       COUNT(*) FILTER (WHERE title IS NULL) AS title_nulls,\n       COUNT(*) FILTER (WHERE director IS NULL) AS director_nulls,\n\t   COUNT(*) FILTER (WHERE movie_cast IS NULL) AS movie_cast_nulls,\n\t   COUNT(*) FILTER (WHERE country IS NULL) AS country_nulls,\n       COUNT(*) FILTER (WHERE date_added IS NULL) AS date_addes_nulls,\n       COUNT(*) FILTER (WHERE release_year IS NULL) AS release_year_nulls,\n       COUNT(*) FILTER (WHERE rating IS NULL) AS rating_nulls,\n\t   COUNT(*) FILTER (WHERE duration IS NULL) AS duration_nulls,\n       COUNT(*) FILTER (WHERE listed_in IS NULL) AS listed_in_nulls,\n\t   COUNT(*) FILTER (WHERE description IS NULL) AS description_nulls\nFROM netflix;\n```\n```\nWe can see that there are NULLS. \ndirector_nulls = 2634\nmovie_cast_nulls = 825\ncountry_nulls = 831\ndate_added_nulls = 10\nrating_nulls = 4\nduration_nulls = 3  \n```\n\nThe director column nulls is about 30% of the whole column, therefore I will not delete them. I will rather find another column to populate it. To populate the director column, we want to find out if there is relationship between movie_cast column and director column\n\n\n``` \n-- Below, we find out if some directors are likely to work with particular cast\n\nWITH cte AS\n(\nSELECT title, CONCAT(director, '---', movie_cast) AS director_cast \nFROM netflix\n)\n\nSELECT director_cast, COUNT(*) AS count\nFROM cte\nGROUP BY director_cast\nHAVING COUNT(*) &gt; 1\nORDER BY COUNT(*) DESC;\n\nWith this, we can now populate NULL rows in directors \nusing their record with movie_cast \n```\n```\nUPDATE netflix \nSET director = 'Alastair Fothergill'\nWHERE movie_cast = 'David Attenborough'\nAND director IS NULL ;\n\n--Repeat this step to populate the rest of the director nulls\n--Populate the rest of the NULL in director as \"Not Given\"\n\nUPDATE netflix \nSET director = 'Not Given'\nWHERE director IS NULL;\n\n--When I was doing this, I found a less complex and faster way to populate a column which I will use next\n```\n\nJust like the director column, I will not delete the nulls in country. Since the country column is related to director and movie, we are going to populate the country column with the director column\n\n```\n--Populate the country using the director column\n\nSELECT COALESCE(nt.country,nt2.country) \nFROM netflix  AS nt\nJOIN netflix AS nt2 \nON nt.director = nt2.director \nAND nt.show_id &lt;&gt; nt2.show_id\nWHERE nt.country IS NULL;\nUPDATE netflix\nSET country = nt2.country\nFROM netflix AS nt2\nWHERE netflix.director = nt2.director and netflix.show_id &lt;&gt; nt2.show_id \nAND netflix.country IS NULL;\n\n\n--To confirm if there are still directors linked to country that refuse to update\n\nSELECT director, country, date_added\nFROM netflix\nWHERE country IS NULL;\n\n--Populate the rest of the NULL in director as \"Not Given\"\n\nUPDATE netflix \nSET country = 'Not Given'\nWHERE country IS NULL;\n```\n\nThe date_added rows nulls is just 10 out of over 8000 rows, deleting them cannot affect our analysis or visualization\n\n```\n--Show date_added nulls\n\nSELECT show_id, date_added\nFROM netflix_clean\nWHERE date_added IS NULL;\n\n--DELETE nulls\n\nDELETE FROM netflix\nWHERE show_id \nIN ('6797', 's6067', 's6175', 's6807', 's6902', 's7255', 's7197', 's7407', 's7848', 's8183');\n\n```\n\nrating nulls is 4. Delete them\n```\n--Show rating NULLS\n\nSELECT show_id, rating\nFROM netflix_clean\nWHERE date_added IS NULL;\n\n--Delete the nulls, and show deleted fields\nDELETE FROM netflix \nWHERE show_id \nIN (SELECT show_id FROM netflix WHERE rating IS NULL)\nRETURNING *;\n```\n\n--duration nulls is 4. Delete them\n```\n\nDELETE FROM netflix \nWHERE show_id \nIN (SELECT show_id FROM netflix WHERE duration IS NULL);\n```\nNow run the query to show the number of nulls in each column to confirm if there are still nulls. After this, run the query to confirm the row number in each column is the same\n\n```\n--Check to confirm the number of rows are the same(NO NULL)\n\nSELECT count(*) filter (where show_id IS NOT NULL) AS showid_nulls,\n       count(*) filter (where type IS NOT NULL) AS type_nulls,\n       count(*) filter (where title IS NOT NULL) AS title_nulls,\n       count(*) filter (where director IS NOT NULL) AS director_nulls,\n\t   count(*) filter (where country IS NOT NULL) AS country_nulls,\n       count(*) filter (where date_added IS NOT NULL) AS date_addes_nulls,\n       count(*) filter (where release_year IS NOT NULL) AS release_year_nulls,\n       count(*) filter (where rating IS NOT NULL) AS rating_nulls,\n\t   count(*) filter (where duration IS NOT NULL) AS duration_nulls,\n       count(*) filter (where listed_in IS NOT NULL) AS listed_in_nulls\nFROM netflix;\n\n --Total number of rows are the same in all columns\n```\nWe can drop the description and movie_cast column because they are not needed for our analysis or visualization task. \n```\n--DROP unneeded columns\n\nALTER TABLE netflix\nDROP COLUMN movie_cast, \nDROP COLUMN description;\n```\nSome of the rows in country column has multiple countries, for my visualization, I only need one country per row to make my map visualization clean and easy. Therefore, I am going to split the country column and retain the first country by the left which I believe is the original country of the movie\n```\nSELECT *,\n\t   SPLIT_PART(country,',',1) AS countryy, \n           SPLIT_PART(country,',',2),\n\t   SPLIT_PART(country,',',4),\n\t   SPLIT_PART(country,',',5),\n\t   SPLIT_PART(country,',',6),\n\t   SPLIT_PART(country,',',7),\n\t   SPLIT_PART(country,',',8),\n\t   SPLIT_PART(country,',',9),\n\t   SPLIT_PART(country,',',10) \n\t   \nFROM netflix;\n\t   \n-- NOW lets update the table\n\nALTER TABLE netflix \nADD country1 varchar(500);\nUPDATE netflix \nSET country1 = SPLIT_PART(country, ',', 1);\n\n--This will create a column named country1 and Update it with the first split country.\n```\n\nDelete the country column that has multiple country entries\n```\n--Delete column\nALTER TABLE netflix \nDROP COLUMN country;\n```\nRename the country1 column to country\n```\nALTER TABLE netflix \nRENAME COLUMN country1 TO country;\n```\n\n## Data Visualization\nAfter cleaning, the dataset is set for some analysis and visualization with Tableau. \n\n**Note: In the visualization captions, Contents means Movies and TV shows, and Content may either mean Movie or TV Show**. \n\n**Sheet 1. Content type in percentage**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F1c95dee22870057541bc3c1cce7b1a36%2FType%20percent.png?generation=1661603826265148&alt=media)\n\nThis first sheet shows the two categories of content in the dataset which are Movie and Tv show. \n- As we can see the majority of the content is Movie which takes 69.9%. \n- There are more details in the tooltip which shows the exact count of Movie and Tv show\n\n\n**Sheet 2. Movie & TV Show by Country**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F511f5a3f07f2fa9d8faea77d1dd21180%2FNumber%20of%20shows%20by%20map.png?generation=1661604888232420&alt=media)\n\nThis shows the the total amount of Movies and Tv shows per country within the given period of time(2008 - 2021). This can be noted by the size of the coloured circle in the map. \n- We can see that the United State of America has the largest size, followed by India and the United Kingdom. \n- In the Tableau hosted dashboard/sheet, there is a filter for the years between 2008 and 2021 to calculate yearly record.\n\n To give an alternate and a clearer view. Movie & TV shows by country bar chart is below\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F64e9f79965e62a4bb63b04acc835a07c%2FNumber%20of%20shows%20by%20bar.png?generation=1661609485785468&alt=media)\n\n\n**Sheet 3. Number of Contents Added through the Years**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2Fe02290507d0be382870f6651e3682cd1%2FNumber%20of%20Contents%20added%20by%20year.png?generation=1661605691430129&alt=media)\n\nThis time series chart shows the total number of contents added to Netflix all through the given years (2008 - 2021)\n- It shows that most movies and tv shows on Netflix were added in 2019\n- In the Tableau sheet, there is a filter to know how much Movies and Tv shows were added in each month of the year \n\n\n**Sheet 4. Top Directors**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F0fa58900b62df123b690da63b6111a3a%2FDirector.png?generation=1661606812783874&alt=media)\n\nThis chart shows the top 10 directors with most contents on Netflix. This char shows the count of Movie and Tv shows in their catalouge. \n- We can see that most of these directors contents are movies. \n- We can also note that the duo of Raul Campos and Jan Suter are fond of working together and have directed 18 movies on Netflix. \n\n\n**Sheet 5. Top Genres** \n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2Fbc458d5885c3d7bcd3e690962c5cc2c3%2FTop%20Genres.png?generation=1661607262740686&alt=media)\n\nThis chart shows the genres with the highest numbers on Netflix. \n- We can see that Drama & International movies followed by Documentary have the highest number of contents on Netflix within the period.\n\n\n**Sheet 6. Top Ratings**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F181df392cb0006559cd9fb19a29cadef%2FRating.png?generation=1661607535247137&alt=media)\n \nRating is a system to rate motion picture's suitability for certain audiences based on its content. This chart shows the top ratings on Netflix\n-We can note that most contents on Netflix are rated TV-MA. TV-MA in the United States by the TV Parental Guidelines signifies content for mature audiences. \n\n\n**Sheet 7. Oldest Contents on Netflix by Content Release year**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F263493038e8dacd330c9e54aed2c467b%2FOldest%20shows%20on%20netflix.png?generation=1661607864455871&alt=media)\n\nThis table shows the 10 oldest movies and tv shows on Netflix\n- The oldest is as old as 1925\n\n**Sheet 8. Content Types over the Years**\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F520da629aceef21a7af890198897c58e%2FContent%20Type%20over%20the%20years.png?generation=1661608071825961&alt=media)\n\nThis line chart compares the Movie and Tv shows contents added to Netflix all through the years.\n- We can see that more movies have always been added. \n- In 2013, the number of contents added to Netflix for both were almost the same with Movies having 6 contents that year and Tv shows having 5.\n- It shows that in the first 5 years, only movies were added to Netflix. \n\n\n**Sheet 9. Release Years with Highest Contents**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F063881abc476d466ad983f96b7f23284%2FRelease_years%20with%20highest%20movie.png?generation=1661608527082875&alt=media)\n\nThis chart shows the Movies and Tv shows production year which has with highest contents on Netflix. We focus on the top 10 release year/production year. \n-We can see that from 2012 to 2018, Netflix added most recent contents, they made sure most recent contents per release year are higher than the older release year contents.  Then in 2019, it started dropping, this may be due to the Covid-19, but further analysis may be needed to determine this. \n\n And with this, I have come to the end of this exercise. As I said this is just an exercise to test my skills as I look forward to be better. Thanks for following through. Cheers!\n\n",
  "datasetId": 2437124,
  "datasetSlug": "netflix-data-cleaning-analysis-and-visualization",
  "hasDatasetSlug": true,
  "ownerUser": "ariyoomotade",
  "hasOwnerUser": true,
  "usabilityRating": 1.0,
  "hasUsabilityRating": true,
  "totalViews": 150593,
  "totalVotes": 369,
  "totalDownloads": 27147,
  "title": "Netflix Data: Cleaning, Analysis and Visualization",
  "hasTitle": true,
  "subtitle": "Cleaning and Visualization with Pgsql and Tableau ",
  "hasSubtitle": true,
  "description": "Netflix is a popular streaming service that offers a vast catalog of movies, TV shows, and original contents. This dataset is a cleaned version of the original version which can be found [here](https://www.kaggle.com/datasets/shivamb/netflix-shows). The data consist of contents added to Netflix from 2008 to 2021. The oldest content is as old as 1925 and the newest as 2021. This dataset will be cleaned with PostgreSQL and visualized with Tableau. The purpose of this dataset is to test my data cleaning and visualization skills. The cleaned data can be found below and the Tableau dashboard can be found [here](https://public.tableau.com/app/profile/abdulrasaq.ariyo/viz/NetflixTVShowsMovies_16615029026580/NetflixDashboard) .   \n\n## Data Cleaning\nWe are going to:\n1. Treat the Nulls \n2. Treat the duplicates\n3.  Populate missing rows\n4. Drop unneeded columns\n5. Split columns\nExtra steps and more explanation on the process will be explained through the code comments\n\n```\n--View dataset\n\nSELECT * \nFROM netflix;\n\n```\n\n```\n--The show_id column is the unique id for the dataset, therefore we are going to check for duplicates\n                                                                   \nSELECT show_id, COUNT(*)                                                                                                                                                                            \nFROM netflix \nGROUP BY show_id                                                                                                                                                                                            \nORDER BY show_id DESC;\n\n--No duplicates\n```\n\n```\n--Check null values across columns\n\nSELECT COUNT(*) FILTER (WHERE show_id IS NULL) AS showid_nulls,\n       COUNT(*) FILTER (WHERE type IS NULL) AS type_nulls,\n       COUNT(*) FILTER (WHERE title IS NULL) AS title_nulls,\n       COUNT(*) FILTER (WHERE director IS NULL) AS director_nulls,\n\t   COUNT(*) FILTER (WHERE movie_cast IS NULL) AS movie_cast_nulls,\n\t   COUNT(*) FILTER (WHERE country IS NULL) AS country_nulls,\n       COUNT(*) FILTER (WHERE date_added IS NULL) AS date_addes_nulls,\n       COUNT(*) FILTER (WHERE release_year IS NULL) AS release_year_nulls,\n       COUNT(*) FILTER (WHERE rating IS NULL) AS rating_nulls,\n\t   COUNT(*) FILTER (WHERE duration IS NULL) AS duration_nulls,\n       COUNT(*) FILTER (WHERE listed_in IS NULL) AS listed_in_nulls,\n\t   COUNT(*) FILTER (WHERE description IS NULL) AS description_nulls\nFROM netflix;\n```\n```\nWe can see that there are NULLS. \ndirector_nulls = 2634\nmovie_cast_nulls = 825\ncountry_nulls = 831\ndate_added_nulls = 10\nrating_nulls = 4\nduration_nulls = 3  \n```\n\nThe director column nulls is about 30% of the whole column, therefore I will not delete them. I will rather find another column to populate it. To populate the director column, we want to find out if there is relationship between movie_cast column and director column\n\n\n``` \n-- Below, we find out if some directors are likely to work with particular cast\n\nWITH cte AS\n(\nSELECT title, CONCAT(director, '---', movie_cast) AS director_cast \nFROM netflix\n)\n\nSELECT director_cast, COUNT(*) AS count\nFROM cte\nGROUP BY director_cast\nHAVING COUNT(*) &gt; 1\nORDER BY COUNT(*) DESC;\n\nWith this, we can now populate NULL rows in directors \nusing their record with movie_cast \n```\n```\nUPDATE netflix \nSET director = 'Alastair Fothergill'\nWHERE movie_cast = 'David Attenborough'\nAND director IS NULL ;\n\n--Repeat this step to populate the rest of the director nulls\n--Populate the rest of the NULL in director as \"Not Given\"\n\nUPDATE netflix \nSET director = 'Not Given'\nWHERE director IS NULL;\n\n--When I was doing this, I found a less complex and faster way to populate a column which I will use next\n```\n\nJust like the director column, I will not delete the nulls in country. Since the country column is related to director and movie, we are going to populate the country column with the director column\n\n```\n--Populate the country using the director column\n\nSELECT COALESCE(nt.country,nt2.country) \nFROM netflix  AS nt\nJOIN netflix AS nt2 \nON nt.director = nt2.director \nAND nt.show_id &lt;&gt; nt2.show_id\nWHERE nt.country IS NULL;\nUPDATE netflix\nSET country = nt2.country\nFROM netflix AS nt2\nWHERE netflix.director = nt2.director and netflix.show_id &lt;&gt; nt2.show_id \nAND netflix.country IS NULL;\n\n\n--To confirm if there are still directors linked to country that refuse to update\n\nSELECT director, country, date_added\nFROM netflix\nWHERE country IS NULL;\n\n--Populate the rest of the NULL in director as \"Not Given\"\n\nUPDATE netflix \nSET country = 'Not Given'\nWHERE country IS NULL;\n```\n\nThe date_added rows nulls is just 10 out of over 8000 rows, deleting them cannot affect our analysis or visualization\n\n```\n--Show date_added nulls\n\nSELECT show_id, date_added\nFROM netflix_clean\nWHERE date_added IS NULL;\n\n--DELETE nulls\n\nDELETE FROM netflix\nWHERE show_id \nIN ('6797', 's6067', 's6175', 's6807', 's6902', 's7255', 's7197', 's7407', 's7848', 's8183');\n\n```\n\nrating nulls is 4. Delete them\n```\n--Show rating NULLS\n\nSELECT show_id, rating\nFROM netflix_clean\nWHERE date_added IS NULL;\n\n--Delete the nulls, and show deleted fields\nDELETE FROM netflix \nWHERE show_id \nIN (SELECT show_id FROM netflix WHERE rating IS NULL)\nRETURNING *;\n```\n\n--duration nulls is 4. Delete them\n```\n\nDELETE FROM netflix \nWHERE show_id \nIN (SELECT show_id FROM netflix WHERE duration IS NULL);\n```\nNow run the query to show the number of nulls in each column to confirm if there are still nulls. After this, run the query to confirm the row number in each column is the same\n\n```\n--Check to confirm the number of rows are the same(NO NULL)\n\nSELECT count(*) filter (where show_id IS NOT NULL) AS showid_nulls,\n       count(*) filter (where type IS NOT NULL) AS type_nulls,\n       count(*) filter (where title IS NOT NULL) AS title_nulls,\n       count(*) filter (where director IS NOT NULL) AS director_nulls,\n\t   count(*) filter (where country IS NOT NULL) AS country_nulls,\n       count(*) filter (where date_added IS NOT NULL) AS date_addes_nulls,\n       count(*) filter (where release_year IS NOT NULL) AS release_year_nulls,\n       count(*) filter (where rating IS NOT NULL) AS rating_nulls,\n\t   count(*) filter (where duration IS NOT NULL) AS duration_nulls,\n       count(*) filter (where listed_in IS NOT NULL) AS listed_in_nulls\nFROM netflix;\n\n --Total number of rows are the same in all columns\n```\nWe can drop the description and movie_cast column because they are not needed for our analysis or visualization task. \n```\n--DROP unneeded columns\n\nALTER TABLE netflix\nDROP COLUMN movie_cast, \nDROP COLUMN description;\n```\nSome of the rows in country column has multiple countries, for my visualization, I only need one country per row to make my map visualization clean and easy. Therefore, I am going to split the country column and retain the first country by the left which I believe is the original country of the movie\n```\nSELECT *,\n\t   SPLIT_PART(country,',',1) AS countryy, \n           SPLIT_PART(country,',',2),\n\t   SPLIT_PART(country,',',4),\n\t   SPLIT_PART(country,',',5),\n\t   SPLIT_PART(country,',',6),\n\t   SPLIT_PART(country,',',7),\n\t   SPLIT_PART(country,',',8),\n\t   SPLIT_PART(country,',',9),\n\t   SPLIT_PART(country,',',10) \n\t   \nFROM netflix;\n\t   \n-- NOW lets update the table\n\nALTER TABLE netflix \nADD country1 varchar(500);\nUPDATE netflix \nSET country1 = SPLIT_PART(country, ',', 1);\n\n--This will create a column named country1 and Update it with the first split country.\n```\n\nDelete the country column that has multiple country entries\n```\n--Delete column\nALTER TABLE netflix \nDROP COLUMN country;\n```\nRename the country1 column to country\n```\nALTER TABLE netflix \nRENAME COLUMN country1 TO country;\n```\n\n## Data Visualization\nAfter cleaning, the dataset is set for some analysis and visualization with Tableau. \n\n**Note: In the visualization captions, Contents means Movies and TV shows, and Content may either mean Movie or TV Show**. \n\n**Sheet 1. Content type in percentage**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F1c95dee22870057541bc3c1cce7b1a36%2FType%20percent.png?generation=1661603826265148&alt=media)\n\nThis first sheet shows the two categories of content in the dataset which are Movie and Tv show. \n- As we can see the majority of the content is Movie which takes 69.9%. \n- There are more details in the tooltip which shows the exact count of Movie and Tv show\n\n\n**Sheet 2. Movie & TV Show by Country**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F511f5a3f07f2fa9d8faea77d1dd21180%2FNumber%20of%20shows%20by%20map.png?generation=1661604888232420&alt=media)\n\nThis shows the the total amount of Movies and Tv shows per country within the given period of time(2008 - 2021). This can be noted by the size of the coloured circle in the map. \n- We can see that the United State of America has the largest size, followed by India and the United Kingdom. \n- In the Tableau hosted dashboard/sheet, there is a filter for the years between 2008 and 2021 to calculate yearly record.\n\n To give an alternate and a clearer view. Movie & TV shows by country bar chart is below\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F64e9f79965e62a4bb63b04acc835a07c%2FNumber%20of%20shows%20by%20bar.png?generation=1661609485785468&alt=media)\n\n\n**Sheet 3. Number of Contents Added through the Years**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2Fe02290507d0be382870f6651e3682cd1%2FNumber%20of%20Contents%20added%20by%20year.png?generation=1661605691430129&alt=media)\n\nThis time series chart shows the total number of contents added to Netflix all through the given years (2008 - 2021)\n- It shows that most movies and tv shows on Netflix were added in 2019\n- In the Tableau sheet, there is a filter to know how much Movies and Tv shows were added in each month of the year \n\n\n**Sheet 4. Top Directors**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F0fa58900b62df123b690da63b6111a3a%2FDirector.png?generation=1661606812783874&alt=media)\n\nThis chart shows the top 10 directors with most contents on Netflix. This char shows the count of Movie and Tv shows in their catalouge. \n- We can see that most of these directors contents are movies. \n- We can also note that the duo of Raul Campos and Jan Suter are fond of working together and have directed 18 movies on Netflix. \n\n\n**Sheet 5. Top Genres** \n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2Fbc458d5885c3d7bcd3e690962c5cc2c3%2FTop%20Genres.png?generation=1661607262740686&alt=media)\n\nThis chart shows the genres with the highest numbers on Netflix. \n- We can see that Drama & International movies followed by Documentary have the highest number of contents on Netflix within the period.\n\n\n**Sheet 6. Top Ratings**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F181df392cb0006559cd9fb19a29cadef%2FRating.png?generation=1661607535247137&alt=media)\n \nRating is a system to rate motion picture's suitability for certain audiences based on its content. This chart shows the top ratings on Netflix\n-We can note that most contents on Netflix are rated TV-MA. TV-MA in the United States by the TV Parental Guidelines signifies content for mature audiences. \n\n\n**Sheet 7. Oldest Contents on Netflix by Content Release year**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F263493038e8dacd330c9e54aed2c467b%2FOldest%20shows%20on%20netflix.png?generation=1661607864455871&alt=media)\n\nThis table shows the 10 oldest movies and tv shows on Netflix\n- The oldest is as old as 1925\n\n**Sheet 8. Content Types over the Years**\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F520da629aceef21a7af890198897c58e%2FContent%20Type%20over%20the%20years.png?generation=1661608071825961&alt=media)\n\nThis line chart compares the Movie and Tv shows contents added to Netflix all through the years.\n- We can see that more movies have always been added. \n- In 2013, the number of contents added to Netflix for both were almost the same with Movies having 6 contents that year and Tv shows having 5.\n- It shows that in the first 5 years, only movies were added to Netflix. \n\n\n**Sheet 9. Release Years with Highest Contents**\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10322697%2F063881abc476d466ad983f96b7f23284%2FRelease_years%20with%20highest%20movie.png?generation=1661608527082875&alt=media)\n\nThis chart shows the Movies and Tv shows production year which has with highest contents on Netflix. We focus on the top 10 release year/production year. \n-We can see that from 2012 to 2018, Netflix added most recent contents, they made sure most recent contents per release year are higher than the older release year contents.  Then in 2019, it started dropping, this may be due to the Covid-19, but further analysis may be needed to determine this. \n\n And with this, I have come to the end of this exercise. As I said this is just an exercise to test my skills as I look forward to be better. Thanks for following through. Cheers!\n\n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "movies and tv shows",
    "business",
    "data cleaning",
    "data visualization",
    "sql"
  ],
  "licenses": [
    {
      "nameNullable": "CC0-1.0",
      "name": "CC0-1.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}