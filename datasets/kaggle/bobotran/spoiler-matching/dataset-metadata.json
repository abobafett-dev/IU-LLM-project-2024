{
  "id": "bobotran/spoiler-matching",
  "id_no": 3884024,
  "datasetSlugNullable": "spoiler-matching",
  "ownerUserNullable": "bobotran",
  "usabilityRatingNullable": 0.6875,
  "titleNullable": "Spoiler Matching",
  "subtitleNullable": "Episode-specific spoilers",
  "descriptionNullable": "# Episode-Specific Spoilers\nThis is the spoiler matching dataset as presented in Spoiler Detection as Semantic Text Matching. It consists of comments discussing episodes from various TV shows. Unlike other spoiler datasets, this dataset assigns an episode number (and show name) to each comment, enabling matching to specific episodes and very fine-grain spoiler detection. This dataset also includes an episode summary for each (show, episode) pair. For a given show, the task is to rank the summaries for each comment.\n\n# Usage\nSee the [Spoiler Matching repository](https://github.com/bobotran/spoiler-matching) for examples on how to train a spoiler matching model on this dataset.\n\n# Annotation\n522,991 comments from 13 TV shows were scraped from episode discussion threads on Reddit. Of these comments, some are actually *relevant* to their respective episode discussion and others are *irrelevant*. A subset of these comments (11,032) were hand-labeled as *irrelevant* or *relevant*. This hand-labeled dataset was used to train an irrelevant/relevant classifier which auto-labeled the remaining comments. All *relevant* comments were formatted into the `matching` dataset.\n\n# Details\nThe `matching` folder contains the spoiler matching dataset, and the `filtering` folder contains intermediate data from the auto-labeling step.\n\n## matching/\nThis folder contains the datasets for training spoiler matching models. All comments in these files were determined to be *relevant*, whether that was done by a human annotator or the auto-labeler. `summaries.json` contains the summary for each episode. `summaries.json` and `test.json` are the same across `with_autolabels` and `handlabeled_only`.\n### matching/with_autolabels/\nThe `with_autolabels` folder contains the main dataset. `test.json` and `val.json` consist of hand-labeled *relevants* while `train.json` contains auto-labeled *relevants*. To measure the performance of spoiler matching models on unseen shows, `test.json` was constructed such that it consists of comments from 4 TV shows which are neither present in `val.json` nor `train.json`. \n### matching/handlabeled_only/\nThe `handlabeled_only` folder shares the same `test.json` with `matching/with_autolabels/`, but `train.json` and `val.json` are split 80-20 from `matching/with_autolabels/val.json` respectively.\n\n## filtering/\nThis folder contains data from the auto-labeling step.\n### filtering/handlabeled\nThis folder contains the dataset used to train the autolabeler. Comments with a `1` in the first column were hand-labeled as `irrelevant`. Comments with a `0` in the first column were hand-labeled as `relevant`. The last two columns are the show name and episode number respectively, which are not used during this step.\n### filtering/unlabeled\nThe unlabeled comments were split into two chunks to make them more manageable to load into memory during inference. All comments have a `-1` in the first column to represent that they are unlabeled.\n",
  "datasetId": 3884024,
  "datasetSlug": "spoiler-matching",
  "hasDatasetSlug": true,
  "ownerUser": "bobotran",
  "hasOwnerUser": true,
  "usabilityRating": 0.6875,
  "hasUsabilityRating": true,
  "totalViews": 135,
  "totalVotes": 1,
  "totalDownloads": 9,
  "title": "Spoiler Matching",
  "hasTitle": true,
  "subtitle": "Episode-specific spoilers",
  "hasSubtitle": true,
  "description": "# Episode-Specific Spoilers\nThis is the spoiler matching dataset as presented in Spoiler Detection as Semantic Text Matching. It consists of comments discussing episodes from various TV shows. Unlike other spoiler datasets, this dataset assigns an episode number (and show name) to each comment, enabling matching to specific episodes and very fine-grain spoiler detection. This dataset also includes an episode summary for each (show, episode) pair. For a given show, the task is to rank the summaries for each comment.\n\n# Usage\nSee the [Spoiler Matching repository](https://github.com/bobotran/spoiler-matching) for examples on how to train a spoiler matching model on this dataset.\n\n# Annotation\n522,991 comments from 13 TV shows were scraped from episode discussion threads on Reddit. Of these comments, some are actually *relevant* to their respective episode discussion and others are *irrelevant*. A subset of these comments (11,032) were hand-labeled as *irrelevant* or *relevant*. This hand-labeled dataset was used to train an irrelevant/relevant classifier which auto-labeled the remaining comments. All *relevant* comments were formatted into the `matching` dataset.\n\n# Details\nThe `matching` folder contains the spoiler matching dataset, and the `filtering` folder contains intermediate data from the auto-labeling step.\n\n## matching/\nThis folder contains the datasets for training spoiler matching models. All comments in these files were determined to be *relevant*, whether that was done by a human annotator or the auto-labeler. `summaries.json` contains the summary for each episode. `summaries.json` and `test.json` are the same across `with_autolabels` and `handlabeled_only`.\n### matching/with_autolabels/\nThe `with_autolabels` folder contains the main dataset. `test.json` and `val.json` consist of hand-labeled *relevants* while `train.json` contains auto-labeled *relevants*. To measure the performance of spoiler matching models on unseen shows, `test.json` was constructed such that it consists of comments from 4 TV shows which are neither present in `val.json` nor `train.json`. \n### matching/handlabeled_only/\nThe `handlabeled_only` folder shares the same `test.json` with `matching/with_autolabels/`, but `train.json` and `val.json` are split 80-20 from `matching/with_autolabels/val.json` respectively.\n\n## filtering/\nThis folder contains data from the auto-labeling step.\n### filtering/handlabeled\nThis folder contains the dataset used to train the autolabeler. Comments with a `1` in the first column were hand-labeled as `irrelevant`. Comments with a `0` in the first column were hand-labeled as `relevant`. The last two columns are the show name and episode number respectively, which are not used during this step.\n### filtering/unlabeled\nThe unlabeled comments were split into two chunks to make them more manageable to load into memory during inference. All comments have a `-1` in the first column to represent that they are unlabeled.\n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "artificial intelligence",
    "text",
    "anime and manga",
    "english",
    "retrieval/ranking"
  ],
  "licenses": [
    {
      "nameNullable": "CC-BY-SA-3.0",
      "name": "CC-BY-SA-3.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}