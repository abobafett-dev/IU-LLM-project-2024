{
  "id": "brusic/hacker-news-who-is-hiring-posts",
  "id_no": 4630926,
  "datasetSlugNullable": "hacker-news-who-is-hiring-posts",
  "ownerUserNullable": "brusic",
  "usabilityRatingNullable": 0.75,
  "titleNullable": "Hacker News: Who Is Hiring Posts",
  "subtitleNullable": "All Hacker News: Who Is Hiring Posts from April 2011",
  "descriptionNullable": "# Context\n\nThis dataset contains all first-level comments to [Hacker News Who Is Hiring posts](https://news.ycombinator.com/submitted?id=whoishiring) from April 2011 to March 2024 in a pickle format. All data is derived from the [official Firebase API](https://github.com/HackerNews/API) and no data cleansing has occurred.\n\n*Who wants to be hired?* and *Freelancer* posts are not included.\n\n# Content\n\nEach row contains the content for a single month which includes:\n- **month**: the month in mmmm yyyy format)\n- **parent_id**: the submission id\n- **comments**: list of comments for the given month.\n\nA single row for each month so that the data can be easily appended to with new data. [Threads are closed to new comments after two weeks](https://news.ycombinator.com/newsfaq.html) so a new row can be appended to the start after the middle of the current month.\n\n|         | **month**      | **parent_id** | **comments**                                      |\n| ------- | -------------- | ------------- | ------------------------------------------------- |\n| **0**   | March 2024     | 39562986      | [{'id': 39563104, 'by': 'jnathsf', 'text': 'Ci... |\n| **1**   | February 2024  | 39217310      | [{'id': 39375047, 'by': 'lpnoel1', 'text': 'Di... |\n| **2**   | January 2024   | 38842977      | [{'id': 38844766, 'by': 'pudo', 'text': 'OpenS... |\n| **...** | ...            | ...           | ...                                               |\n| **159** | June 2011      | 2607052       | [{'id': 2607280, 'by': 'yummyfajitas', 'text':... |\n| **160** | May 2011       | 2503204       | [{'id': 2504067, 'by': 'jfarmer', 'text': 'Eve... |\n| **161** | April 2011     | 2396027       | [{'id': 2396144, 'by': 'pchristensen', 'text':... |\n\n# Formats\n\nData is available in compressed parquet, feather, and pickle formats\n\n### The data frame can be easily converted into a row-for-comment format\n\n```python\n\nimport pandas as pd\n\nhiring_df = pd.read_parquet('hiring.parquet')\n\nexploded_df = hiring_df.explode('comments').dropna().reset_index(drop=True).rename(columns={'comments': 'comment'})\n\ncomments_df = exploded_df.join(pd.DataFrame(exploded_df['comment'].tolist())).drop('comment', axis=1)  \n\n```\n\n|       | **month**  | **parent_id** | **id**   | **by**          | **text**                                          |\n| ----- | ---------- | ------------- | -------- | --------------- | ------------------------------------------------- |\n| **0** | March 2024 | 39562986      | 39563104 | jnathsf         | City Innovate | ",
  "datasetId": 4630926,
  "datasetSlug": "hacker-news-who-is-hiring-posts",
  "hasDatasetSlug": true,
  "ownerUser": "brusic",
  "hasOwnerUser": true,
  "usabilityRating": 0.75,
  "hasUsabilityRating": true,
  "totalViews": 85,
  "totalVotes": 0,
  "totalDownloads": 6,
  "title": "Hacker News: Who Is Hiring Posts",
  "hasTitle": true,
  "subtitle": "All Hacker News: Who Is Hiring Posts from April 2011",
  "hasSubtitle": true,
  "description": "# Context\n\nThis dataset contains all first-level comments to [Hacker News Who Is Hiring posts](https://news.ycombinator.com/submitted?id=whoishiring) from April 2011 to March 2024 in a pickle format. All data is derived from the [official Firebase API](https://github.com/HackerNews/API) and no data cleansing has occurred.\n\n*Who wants to be hired?* and *Freelancer* posts are not included.\n\n# Content\n\nEach row contains the content for a single month which includes:\n- **month**: the month in mmmm yyyy format)\n- **parent_id**: the submission id\n- **comments**: list of comments for the given month.\n\nA single row for each month so that the data can be easily appended to with new data. [Threads are closed to new comments after two weeks](https://news.ycombinator.com/newsfaq.html) so a new row can be appended to the start after the middle of the current month.\n\n|         | **month**      | **parent_id** | **comments**                                      |\n| ------- | -------------- | ------------- | ------------------------------------------------- |\n| **0**   | March 2024     | 39562986      | [{'id': 39563104, 'by': 'jnathsf', 'text': 'Ci... |\n| **1**   | February 2024  | 39217310      | [{'id': 39375047, 'by': 'lpnoel1', 'text': 'Di... |\n| **2**   | January 2024   | 38842977      | [{'id': 38844766, 'by': 'pudo', 'text': 'OpenS... |\n| **...** | ...            | ...           | ...                                               |\n| **159** | June 2011      | 2607052       | [{'id': 2607280, 'by': 'yummyfajitas', 'text':... |\n| **160** | May 2011       | 2503204       | [{'id': 2504067, 'by': 'jfarmer', 'text': 'Eve... |\n| **161** | April 2011     | 2396027       | [{'id': 2396144, 'by': 'pchristensen', 'text':... |\n\n# Formats\n\nData is available in compressed parquet, feather, and pickle formats\n\n### The data frame can be easily converted into a row-for-comment format\n\n```python\n\nimport pandas as pd\n\nhiring_df = pd.read_parquet('hiring.parquet')\n\nexploded_df = hiring_df.explode('comments').dropna().reset_index(drop=True).rename(columns={'comments': 'comment'})\n\ncomments_df = exploded_df.join(pd.DataFrame(exploded_df['comment'].tolist())).drop('comment', axis=1)  \n\n```\n\n|       | **month**  | **parent_id** | **id**   | **by**          | **text**                                          |\n| ----- | ---------- | ------------- | -------- | --------------- | ------------------------------------------------- |\n| **0** | March 2024 | 39562986      | 39563104 | jnathsf         | City Innovate | ",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "earth and nature",
    "tabular",
    "text",
    "jobs and career",
    "pandas"
  ],
  "licenses": [
    {
      "nameNullable": "MIT",
      "name": "MIT",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}