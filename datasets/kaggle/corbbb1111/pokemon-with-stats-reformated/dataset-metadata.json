{
  "id": "corbbb1111/pokemon-with-stats-reformated",
  "id_no": 235464,
  "datasetSlugNullable": "pokemon-with-stats-reformated",
  "ownerUserNullable": "corbbb1111",
  "usabilityRatingNullable": 0.6470588235294118,
  "titleNullable": "Pokemon With Stats ReFormated",
  "subtitleNullable": "A re-formatted version of the popular Pokemon with Stats dataset",
  "descriptionNullable": "### Context\nThis data is a re-formatted version of the popular [Pokemon with Stats](https://www.kaggle.com/abcsds/pokemon) table uploaded by Alberto Barradas to make some data manipulation easier.  Some of the manipulation could be done within Python or R, but some of us are not that savvy.  Hopefully, this makes entry-level analysis easier for beginner users.\n\n### Content\nHere are a list of changes to the table that were made:\n1. Added a column called ROW_ID that counts every record as one entry;\n2. Added a column called ROW_COUNT that gives every record a value of 1;\n3. Renamed the \"#\" column to be POKEDEX_NUM because a hash character is not an ideal column name;\n4. In the NAME column, some of the Pokemon names had odd characters (like Nidorana, so I altered them).  This was only done to &lt;5 Pokemon and does not change the record meaningfully;\n5. For records where the Pokemon does not have a second type, I labelled each of those records as NO_TYPE2 which I feel is more helpful than a blank value;\n6. Removed spaces in the Type 1 and Type 2 column heading names;\n7. Capitalized all column heading names;\n8. Renamed Special Attack and Special Defense column heading names;\n9. Added a 1 or 0 field for Legendary to complement the boolean field;\n10. Using a simple text search formula in excel, created a 1 or 0 field to indicate if the record is a Mega Pokemon or not;\n11. Since some Pokemon can appear in multiple forms, created a field that only shows 1 for a unique Pokemon and returns a 0 for any additional forms that are in the table;\n\n### Acknowledgements\nAgain, this table [comes from](https://www.kaggle.com/abcsds/pokemon) Alberto Barradas and he deserves all due credit.  Adding the same tags as the original dataset.\n\nHere is the original dataset description:\n*This data set includes 721 Pokemon, including their number, name, first and second type, and basic stats: HP, Attack, Defense, Special Attack, Special Defense, and Speed. It has been of great use when teaching statistics to kids. With certain types you can also give a geeky introduction to machine learning.\n\nThis are the raw attributes that are used for calculating how much damage an attack will do in the games. This dataset is about the pokemon games (NOT pokemon cards or Pokemon Go).\n\nThe data as described by Myles O'Neill is:\nID for each pokemon\nName: Name of each pokemon\nType 1: Each pokemon has a type, this determines weakness/resistance to attacks\nType 2: Some pokemon are dual type and have 2\nTotal: sum of all stats that come after this, a general guide to how strong a pokemon is\nHP: hit points, or health, defines how much damage a pokemon can withstand before fainting\nAttack: the base modifier for normal attacks (eg. Scratch, Punch)\nDefense: the base damage resistance against normal attacks\nSP Atk: special attack, the base modifier for special attacks (e.g. fire blast, bubble beam)\nSP Def: the base damage resistance against special attacks\nSpeed: determines which pokemon attacks first each round*\n\nThe data for this table has been acquired from several different sites, including:\npokemon.com\npokemondb\nbulbapedia\n\nOne question has been answered with this database: The type of a pokemon cannot be inferred only by it's Attack and Deffence. It would be worthy to find which two variables can define the type of a pokemon, if any. Two variables can be plotted in a 2D space, and used as an example for machine learning. This could mean the creation of a visual example any geeky Machine Learning class would love.*",
  "datasetId": 235464,
  "datasetSlug": "pokemon-with-stats-reformated",
  "hasDatasetSlug": true,
  "ownerUser": "corbbb1111",
  "hasOwnerUser": true,
  "usabilityRating": 0.6470588235294118,
  "hasUsabilityRating": true,
  "totalViews": 2209,
  "totalVotes": 4,
  "totalDownloads": 119,
  "title": "Pokemon With Stats ReFormated",
  "hasTitle": true,
  "subtitle": "A re-formatted version of the popular Pokemon with Stats dataset",
  "hasSubtitle": true,
  "description": "### Context\nThis data is a re-formatted version of the popular [Pokemon with Stats](https://www.kaggle.com/abcsds/pokemon) table uploaded by Alberto Barradas to make some data manipulation easier.  Some of the manipulation could be done within Python or R, but some of us are not that savvy.  Hopefully, this makes entry-level analysis easier for beginner users.\n\n### Content\nHere are a list of changes to the table that were made:\n1. Added a column called ROW_ID that counts every record as one entry;\n2. Added a column called ROW_COUNT that gives every record a value of 1;\n3. Renamed the \"#\" column to be POKEDEX_NUM because a hash character is not an ideal column name;\n4. In the NAME column, some of the Pokemon names had odd characters (like Nidorana, so I altered them).  This was only done to &lt;5 Pokemon and does not change the record meaningfully;\n5. For records where the Pokemon does not have a second type, I labelled each of those records as NO_TYPE2 which I feel is more helpful than a blank value;\n6. Removed spaces in the Type 1 and Type 2 column heading names;\n7. Capitalized all column heading names;\n8. Renamed Special Attack and Special Defense column heading names;\n9. Added a 1 or 0 field for Legendary to complement the boolean field;\n10. Using a simple text search formula in excel, created a 1 or 0 field to indicate if the record is a Mega Pokemon or not;\n11. Since some Pokemon can appear in multiple forms, created a field that only shows 1 for a unique Pokemon and returns a 0 for any additional forms that are in the table;\n\n### Acknowledgements\nAgain, this table [comes from](https://www.kaggle.com/abcsds/pokemon) Alberto Barradas and he deserves all due credit.  Adding the same tags as the original dataset.\n\nHere is the original dataset description:\n*This data set includes 721 Pokemon, including their number, name, first and second type, and basic stats: HP, Attack, Defense, Special Attack, Special Defense, and Speed. It has been of great use when teaching statistics to kids. With certain types you can also give a geeky introduction to machine learning.\n\nThis are the raw attributes that are used for calculating how much damage an attack will do in the games. This dataset is about the pokemon games (NOT pokemon cards or Pokemon Go).\n\nThe data as described by Myles O'Neill is:\nID for each pokemon\nName: Name of each pokemon\nType 1: Each pokemon has a type, this determines weakness/resistance to attacks\nType 2: Some pokemon are dual type and have 2\nTotal: sum of all stats that come after this, a general guide to how strong a pokemon is\nHP: hit points, or health, defines how much damage a pokemon can withstand before fainting\nAttack: the base modifier for normal attacks (eg. Scratch, Punch)\nDefense: the base damage resistance against normal attacks\nSP Atk: special attack, the base modifier for special attacks (e.g. fire blast, bubble beam)\nSP Def: the base damage resistance against special attacks\nSpeed: determines which pokemon attacks first each round*\n\nThe data for this table has been acquired from several different sites, including:\npokemon.com\npokemondb\nbulbapedia\n\nOne question has been answered with this database: The type of a pokemon cannot be inferred only by it's Attack and Deffence. It would be worthy to find which two variables can define the type of a pokemon, if any. Two variables can be plotted in a 2D space, and used as an example for machine learning. This could mean the creation of a visual example any geeky Machine Learning class would love.*",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "popular culture",
    "arts and entertainment",
    "games",
    "video games",
    "beginner",
    "anime and manga"
  ],
  "licenses": [
    {
      "nameNullable": "unknown",
      "name": "unknown",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}