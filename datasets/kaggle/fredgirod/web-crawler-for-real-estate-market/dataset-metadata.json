{
  "id": "fredgirod/web-crawler-for-real-estate-market",
  "id_no": 1016,
  "datasetSlugNullable": "web-crawler-for-real-estate-market",
  "ownerUserNullable": "fredgirod",
  "usabilityRatingNullable": 0.8529411764705882,
  "titleNullable": "Web crawler for real estate market",
  "subtitleNullable": "Identify mispriced places in the residential rental market",
  "descriptionNullable": "**Creating a rental market database for data analysis and machine learning.**\n\n\n\n----------\n\n\n\n***How does it work ?***\n\nYou scrape the property ads (sale or rent) on internet and you get a dataset.\n\n*Then 3 fancy solutions are possible:*\n\n- Run your webcrawler everyday for a specific place, upload the data in your data warehouse, and monitor the trends in real estate market prices.\n\n- Apply machine learning to your database and get a sense of the relative expensiveness of the properties.\n\n- Localize every property ads on a Google map using color-coded points in order to visualize the most cheap and expensive neighborhoods.\n\n\n----------\n\n\n\n***Original Data Source***\n\nFor the sake of example, and for proximity reasons, we fetched information from a mid-sized Swiss city, called Lausanne, based in the south of Switzerland. \nThe country has the particularity that people get often puzzled by the level of prices swarming almost everywhere in the rental markets. This is mostly related to the very high living standards prevailing over here.\nSo we used one of the public property ads available in this french-speaking part of the country : [https://www.homegate.ch/][1]\n\nBecause the booming Swiss housing market is mainly a rental market (foreign investments have been riding high for the sales of property, and mortgage loans are closed to record low), I focused on real estate for rent ads in the Homegate website.\n\n\n----------\n\n\n\n***Building a webcrawler***\n\nIn the Kernels section, you will find out how the Python looks like. I used BeautifulSoup and Urllib Python libraries to grab data from the website.\nAs you can figure out, the code is simple, but really efficient. \n\n\n----------\n\n\n\n***What you get***\n\nIn this example, I extracted data as of 03/17/2017, and I named the DataFrame \"Output\", available in CSV format to make the data compatible with most commonly preferred tools for analysis. It allows you to get a DataFrame with 12 columns:\n\n- the date\n\n- is it a rent or a buy\n\n- the location\n\n- the address of the property\n\n- the zip code\n\n- the available description of the property\n\n- the number of rooms\n\n- the surface\n\n- the floor\n\n- the price\n\n- the source\n\n\n----------\n\n\n\n***Machine learning***\n\nIn the Kernels section, you will see a very simple ML algorithm applied to the dataset in order to the \"theoretical\" price of each asset, at the end of the code.\nFor the sake of simplicity, I ran a very straightforward linear regression using only 3 features (the 3 only quantitative factors I have at hand) : \n\n- the number of rooms\n\n- the floor\n\n- the surface\n\nI know what you're thinking right at the moment : those 3 features can barely explain the price of a property. Other determinants, such as the location, the neighborhood, the fact that it is outdated, badly maintained by a students roommate partying every night, ... , are of interest when it comes to assessing an appartment.\nBut straightaway, I reduced the model to this. \n\n\n----------\n\n\n\n***Google Map display of the property ads and their relative expensiveness***\n\ncf Capture.PNG file\n\n----------\n\n\n\n***Upcoming improvements***\n\n- Add new features to machine learning process, especially a dummy variable accounting for the neighborhood to which the property pertains.\n\n- See to what extent a logistic regression could overcome a linear regressor.\n\n- Test more complex machine learning algorithms.\n\n- Display trends in rental property prices, for each neighborhood, after establishing a larger database (with a few weeks of scraped data).\n\n----------\n\n\n\n\n  [1]: https://drive.google.com/open?id=0BzSnFT3EqymyaWVzT1ViS29saVk",
  "datasetId": 1016,
  "datasetSlug": "web-crawler-for-real-estate-market",
  "hasDatasetSlug": true,
  "ownerUser": "fredgirod",
  "hasOwnerUser": true,
  "usabilityRating": 0.8529411764705882,
  "hasUsabilityRating": true,
  "totalViews": 24287,
  "totalVotes": 29,
  "totalDownloads": 1181,
  "title": "Web crawler for real estate market",
  "hasTitle": true,
  "subtitle": "Identify mispriced places in the residential rental market",
  "hasSubtitle": true,
  "description": "**Creating a rental market database for data analysis and machine learning.**\n\n\n\n----------\n\n\n\n***How does it work ?***\n\nYou scrape the property ads (sale or rent) on internet and you get a dataset.\n\n*Then 3 fancy solutions are possible:*\n\n- Run your webcrawler everyday for a specific place, upload the data in your data warehouse, and monitor the trends in real estate market prices.\n\n- Apply machine learning to your database and get a sense of the relative expensiveness of the properties.\n\n- Localize every property ads on a Google map using color-coded points in order to visualize the most cheap and expensive neighborhoods.\n\n\n----------\n\n\n\n***Original Data Source***\n\nFor the sake of example, and for proximity reasons, we fetched information from a mid-sized Swiss city, called Lausanne, based in the south of Switzerland. \nThe country has the particularity that people get often puzzled by the level of prices swarming almost everywhere in the rental markets. This is mostly related to the very high living standards prevailing over here.\nSo we used one of the public property ads available in this french-speaking part of the country : [https://www.homegate.ch/][1]\n\nBecause the booming Swiss housing market is mainly a rental market (foreign investments have been riding high for the sales of property, and mortgage loans are closed to record low), I focused on real estate for rent ads in the Homegate website.\n\n\n----------\n\n\n\n***Building a webcrawler***\n\nIn the Kernels section, you will find out how the Python looks like. I used BeautifulSoup and Urllib Python libraries to grab data from the website.\nAs you can figure out, the code is simple, but really efficient. \n\n\n----------\n\n\n\n***What you get***\n\nIn this example, I extracted data as of 03/17/2017, and I named the DataFrame \"Output\", available in CSV format to make the data compatible with most commonly preferred tools for analysis. It allows you to get a DataFrame with 12 columns:\n\n- the date\n\n- is it a rent or a buy\n\n- the location\n\n- the address of the property\n\n- the zip code\n\n- the available description of the property\n\n- the number of rooms\n\n- the surface\n\n- the floor\n\n- the price\n\n- the source\n\n\n----------\n\n\n\n***Machine learning***\n\nIn the Kernels section, you will see a very simple ML algorithm applied to the dataset in order to the \"theoretical\" price of each asset, at the end of the code.\nFor the sake of simplicity, I ran a very straightforward linear regression using only 3 features (the 3 only quantitative factors I have at hand) : \n\n- the number of rooms\n\n- the floor\n\n- the surface\n\nI know what you're thinking right at the moment : those 3 features can barely explain the price of a property. Other determinants, such as the location, the neighborhood, the fact that it is outdated, badly maintained by a students roommate partying every night, ... , are of interest when it comes to assessing an appartment.\nBut straightaway, I reduced the model to this. \n\n\n----------\n\n\n\n***Google Map display of the property ads and their relative expensiveness***\n\ncf Capture.PNG file\n\n----------\n\n\n\n***Upcoming improvements***\n\n- Add new features to machine learning process, especially a dummy variable accounting for the neighborhood to which the property pertains.\n\n- See to what extent a logistic regression could overcome a linear regressor.\n\n- Test more complex machine learning algorithms.\n\n- Display trends in rental property prices, for each neighborhood, after establishing a larger database (with a few weeks of scraped data).\n\n----------\n\n\n\n\n  [1]: https://drive.google.com/open?id=0BzSnFT3EqymyaWVzT1ViS29saVk",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "earth and nature",
    "real estate",
    "computer science",
    "internet"
  ],
  "licenses": [
    {
      "nameNullable": "DbCL-1.0",
      "name": "DbCL-1.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}