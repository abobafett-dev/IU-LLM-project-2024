{
  "id": "gpiosenka/gender-classification-from-an-image",
  "id_no": 1015655,
  "datasetSlugNullable": "gender-classification-from-an-image",
  "ownerUserNullable": "gpiosenka",
  "usabilityRatingNullable": 0.6470588235294118,
  "titleNullable": "Gender Classification Dataset",
  "subtitleNullable": "3491 train, 200 test, 200 validation images jpg format",
  "descriptionNullable": "### Context\n\nI do a lot of work with image data sets. Often it is necessary to partition the images into male and female data sets. Doing this by hand can be a long and tedious task particularly on large data sets. So I decided to create a classifier that could do the task for me.\n\n\n### Content\n\nI used the CELEBA aligned data set to provide the images. I went through and separated the images visually into 1747 female and 1747 male training images.\nI also created  100 male and 100 female test image and 100 male, 100 female validation images. I want to only  the face to be in the image so I developed an image cropping function using MTCNN to crop all the images. That function is included as one of the notebooks should anyone have a need for a good face cropping function. I also created an image duplicate detector to try to eliminate any of the training images from appearing in the test or validation images. \nI have developed a general purpose image classification function that works very well for most image classification tasks. It contains the option to select 1 of 7 models for use. For this application I used the MobileNet model because it is less computationally expensive and gives excellent results. On the test set accuracy is near 100%.\n\n\n### Acknowledgements\n\nThe CELEBA aligned data set was used. This data set is very large and of good quality. To crop the images to only include the face I developed a face cropping function using MTCNN. MTCNN is a very accurate program and is reasonably fast, however it is notflawless so after cropping the iages  you shouldalways visually inspect the results.\n\n\n### Inspiration\n\nI developed this data set to train a classifier to be able to distinguish the gender shown in an image. Why bother you may ask I can just look at the image and tell. True but lets say you have a data set of 50,000 images that you want to separate it into male and female data sets. Doing that by hand would take forever. With the trained classifier with near 100% accuracy you can use the classifier with model.predict to do the job for you.",
  "datasetId": 1015655,
  "datasetSlug": "gender-classification-from-an-image",
  "hasDatasetSlug": true,
  "ownerUser": "gpiosenka",
  "hasOwnerUser": true,
  "usabilityRating": 0.6470588235294118,
  "hasUsabilityRating": true,
  "totalViews": 12724,
  "totalVotes": 18,
  "totalDownloads": 1288,
  "title": "Gender Classification Dataset",
  "hasTitle": true,
  "subtitle": "3491 train, 200 test, 200 validation images jpg format",
  "hasSubtitle": true,
  "description": "### Context\n\nI do a lot of work with image data sets. Often it is necessary to partition the images into male and female data sets. Doing this by hand can be a long and tedious task particularly on large data sets. So I decided to create a classifier that could do the task for me.\n\n\n### Content\n\nI used the CELEBA aligned data set to provide the images. I went through and separated the images visually into 1747 female and 1747 male training images.\nI also created  100 male and 100 female test image and 100 male, 100 female validation images. I want to only  the face to be in the image so I developed an image cropping function using MTCNN to crop all the images. That function is included as one of the notebooks should anyone have a need for a good face cropping function. I also created an image duplicate detector to try to eliminate any of the training images from appearing in the test or validation images. \nI have developed a general purpose image classification function that works very well for most image classification tasks. It contains the option to select 1 of 7 models for use. For this application I used the MobileNet model because it is less computationally expensive and gives excellent results. On the test set accuracy is near 100%.\n\n\n### Acknowledgements\n\nThe CELEBA aligned data set was used. This data set is very large and of good quality. To crop the images to only include the face I developed a face cropping function using MTCNN. MTCNN is a very accurate program and is reasonably fast, however it is notflawless so after cropping the iages  you shouldalways visually inspect the results.\n\n\n### Inspiration\n\nI developed this data set to train a classifier to be able to distinguish the gender shown in an image. Why bother you may ask I can just look at the image and tell. True but lets say you have a data set of 50,000 images that you want to separate it into male and female data sets. Doing that by hand would take forever. With the trained classifier with near 100% accuracy you can use the classifier with model.predict to do the job for you.",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "computer vision",
    "classification",
    "cnn",
    "image",
    "tensorflow"
  ],
  "licenses": [
    {
      "nameNullable": "unknown",
      "name": "unknown",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}