{
  "id": "luisolazo/tomato-diseases",
  "id_no": 4668294,
  "datasetSlugNullable": "tomato-diseases",
  "ownerUserNullable": "luisolazo",
  "usabilityRatingNullable": 0.875,
  "titleNullable": "Tomato Leaf Disease",
  "subtitleNullable": "New dataset on tomato leaf diseases with 10 classes",
  "descriptionNullable": "# Tomato Leaf Disease Classification\nAbout 22,000 images of tomato leaves with a size of 256x256., covering 9 diseases and a healthy leaf category. The images have been captured in both laboratory settings and real-world scenarios and are already data-augmented. The goal is to develop a lightweight learning model capable of predicting tomato leaf diseases that can be implemented in a mobile application for offline diagnostics.\n\nClasses:\n- bacterial_spot \t\t\t\n- early_blight\t\t\t\n- healthy\n- late_blight\n- leaf_mold\n- mosaic_virus\n- septoria_leaf_spot\n- target_spot\n- twospotted_spider_mite\n- yellow_leaf_curl_virus\n\nA function has been used to discard all blurred images from the original data set to ensure better accuracy in the real world, so the number of total images with respect to version 1 is somewhat smaller:\n\n```python\ndef is_blurry(image_path, threshold=100):\n    # Load image\n    image = cv2.imread(image_path)\n    \n    # Convert image to grayscale\n    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n    \n    # Calculate the value of the image blur using the Laplacian variance\n    variance = cv2.Laplacian(gray, cv2.CV_64F).var()\n    \n    # If the variance is less than the threshold, the image is considered blurred.\n    return variance &lt; threshold\n```\n\nTo increase data in the original images, the following configuration has basically been used:\n\n```python\n    datagen = image.ImageDataGenerator(\n        width_shift_range=0.12,\n        height_shift_range=0.12,\n        shear_range=0.12,\n        zoom_range=0.12,\n        horizontal_flip=True,\n        vertical_flip=True,\n        rotation_range=60,\n        fill_mode='constant',\n        cval=0,\n        brightness_range=[0.80, 1.42])\n```\n\n\nAll original images come from only 2 sources:\n\n| Research | Actions | Link to Dataset |\n| :---: | :---: | :---: |\n| [Identification of plant leaf diseases using a nine-layer deep convolutional neural network](https://doi.org/10.1016/j.compeleceng.2019.04.011) | Only the tomato categories were chosen here without data augmentation | [Mendeley Data](https://data.mendeley.com/datasets/tywbtsjrjv/1) | \n[Tomato-Village: a dataset for end-to-end tomato disease detection in a real-world environment](https://doi.org/10.1007/s00530-023-01158-y) | Here only the folder \"Variant-a(Multiclass Classification)\" was considered. |  [GitHub repository](https://github.com/mamta-joshi-gehlot/Tomato-Village) |",
  "datasetId": 4668294,
  "datasetSlug": "tomato-diseases",
  "hasDatasetSlug": true,
  "ownerUser": "luisolazo",
  "hasOwnerUser": true,
  "usabilityRating": 0.875,
  "hasUsabilityRating": true,
  "totalViews": 1357,
  "totalVotes": 2,
  "totalDownloads": 255,
  "title": "Tomato Leaf Disease",
  "hasTitle": true,
  "subtitle": "New dataset on tomato leaf diseases with 10 classes",
  "hasSubtitle": true,
  "description": "# Tomato Leaf Disease Classification\nAbout 22,000 images of tomato leaves with a size of 256x256., covering 9 diseases and a healthy leaf category. The images have been captured in both laboratory settings and real-world scenarios and are already data-augmented. The goal is to develop a lightweight learning model capable of predicting tomato leaf diseases that can be implemented in a mobile application for offline diagnostics.\n\nClasses:\n- bacterial_spot \t\t\t\n- early_blight\t\t\t\n- healthy\n- late_blight\n- leaf_mold\n- mosaic_virus\n- septoria_leaf_spot\n- target_spot\n- twospotted_spider_mite\n- yellow_leaf_curl_virus\n\nA function has been used to discard all blurred images from the original data set to ensure better accuracy in the real world, so the number of total images with respect to version 1 is somewhat smaller:\n\n```python\ndef is_blurry(image_path, threshold=100):\n    # Load image\n    image = cv2.imread(image_path)\n    \n    # Convert image to grayscale\n    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n    \n    # Calculate the value of the image blur using the Laplacian variance\n    variance = cv2.Laplacian(gray, cv2.CV_64F).var()\n    \n    # If the variance is less than the threshold, the image is considered blurred.\n    return variance &lt; threshold\n```\n\nTo increase data in the original images, the following configuration has basically been used:\n\n```python\n    datagen = image.ImageDataGenerator(\n        width_shift_range=0.12,\n        height_shift_range=0.12,\n        shear_range=0.12,\n        zoom_range=0.12,\n        horizontal_flip=True,\n        vertical_flip=True,\n        rotation_range=60,\n        fill_mode='constant',\n        cval=0,\n        brightness_range=[0.80, 1.42])\n```\n\n\nAll original images come from only 2 sources:\n\n| Research | Actions | Link to Dataset |\n| :---: | :---: | :---: |\n| [Identification of plant leaf diseases using a nine-layer deep convolutional neural network](https://doi.org/10.1016/j.compeleceng.2019.04.011) | Only the tomato categories were chosen here without data augmentation | [Mendeley Data](https://data.mendeley.com/datasets/tywbtsjrjv/1) | \n[Tomato-Village: a dataset for end-to-end tomato disease detection in a real-world environment](https://doi.org/10.1007/s00530-023-01158-y) | Here only the folder \"Variant-a(Multiclass Classification)\" was considered. |  [GitHub repository](https://github.com/mamta-joshi-gehlot/Tomato-Village) |",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "categorical",
    "biology",
    "plants",
    "agriculture",
    "image classification"
  ],
  "licenses": [
    {
      "nameNullable": "CC0-1.0",
      "name": "CC0-1.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}