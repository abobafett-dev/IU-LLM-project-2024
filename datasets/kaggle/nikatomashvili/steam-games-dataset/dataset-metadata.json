{
  "id": "nikatomashvili/steam-games-dataset",
  "id_no": 3884656,
  "datasetSlugNullable": "steam-games-dataset",
  "ownerUserNullable": "nikatomashvili",
  "usabilityRatingNullable": 1.0,
  "titleNullable": "Steam Games Dataset",
  "subtitleNullable": "Dataset scraped from the rolling page of the steam search site",
  "descriptionNullable": "I have gathered this dataset  by scraping the rolling page of the steam search site: https://store.steampowered.com/search/?category1=998&ndl=1&ignore_preferences=1\nThe data has been scraped in early September.\nThe data is unorganized and needs cleaning.\n\nIf you want to see how I created recommendation system below you can read the description and ordering of notebooks. (check notebooks by owner)\n\nNames of notebooks:\n- Preprocessing\n- EDA of preprocessed data\n- ML_Analysis_Main\n- ML_Analysis _improving\n- Recommendation System - Hybrid (the main target)\n- Recommendations system Item-based (just for example)\n\nA small description\n\nWe started by scraping a video game platform steam. We used a rolling page in which the games were loaded endlessly while scrolling until games ran out. The order is less important. In the first scraping phase, we obtained Game data, namely name, price, discounted price, release date, and Link. Later, using the link, we expanded the data and extracted more information for each game. We merged the two datasets into a single file (which is uploaded here) and moved to the next step.\n\nIn the second stage, we did preprocessing before we started EDA directly. This could have happened during the EDA, but it was possible to carry out certain manipulations from the beginning. We fixed what we could easily see before EDA and then moved to EDA. This phase was very important because several features were removed and added, new ones were created etc.\n\nEDA describes a lot of things about data that happened\nCleaned, sorted, and visualized. Finally, data was prepared for analysis.\n\nFirst in the analysis phase\nThe Jupiter notebook I worked in is Analysis_Main, where I made the main \nmachine-learning manipulations and finally got the game_recommendations CSV file.\nOne cell in this file returns an error, which I intentionally left as is and indicated why.\n\nThe next file is Analysis \u2013 improving, where the game_recommendations created in the previous notebook\nwas used and improved into the file game_recommendations2. (improved the model)\n\nAfter that, the games were already grouped and we got the data\nwhich showed 10 recommendations per game. With this, the system can be considered somewhat complete, but I decided to use the user's data for testing purposes. I took the data from Kaggle, just for testing purposes (scraping steam by a customer was completely limited). This file is called steam-200k where there is data on users. Recommendation System - Hybrid is the file in which the main test is used.\nThe file is hybrid, which means that a collaborative and content-based recommendation approach is used. \n\nIn this notebook, one cell saves only content-based file - user_recommendations_ContentBased.\n\nAfter that I additionally made a Test_Collaborative_ItemBased notebook where only the collaborative approach is implemented, just for testing.\n\nIf the Data is used give credit to the owner.",
  "datasetId": 3884656,
  "datasetSlug": "steam-games-dataset",
  "hasDatasetSlug": true,
  "ownerUser": "nikatomashvili",
  "hasOwnerUser": true,
  "usabilityRating": 1.0,
  "hasUsabilityRating": true,
  "totalViews": 14971,
  "totalVotes": 48,
  "totalDownloads": 2325,
  "title": "Steam Games Dataset",
  "hasTitle": true,
  "subtitle": "Dataset scraped from the rolling page of the steam search site",
  "hasSubtitle": true,
  "description": "I have gathered this dataset  by scraping the rolling page of the steam search site: https://store.steampowered.com/search/?category1=998&ndl=1&ignore_preferences=1\nThe data has been scraped in early September.\nThe data is unorganized and needs cleaning.\n\nIf you want to see how I created recommendation system below you can read the description and ordering of notebooks. (check notebooks by owner)\n\nNames of notebooks:\n- Preprocessing\n- EDA of preprocessed data\n- ML_Analysis_Main\n- ML_Analysis _improving\n- Recommendation System - Hybrid (the main target)\n- Recommendations system Item-based (just for example)\n\nA small description\n\nWe started by scraping a video game platform steam. We used a rolling page in which the games were loaded endlessly while scrolling until games ran out. The order is less important. In the first scraping phase, we obtained Game data, namely name, price, discounted price, release date, and Link. Later, using the link, we expanded the data and extracted more information for each game. We merged the two datasets into a single file (which is uploaded here) and moved to the next step.\n\nIn the second stage, we did preprocessing before we started EDA directly. This could have happened during the EDA, but it was possible to carry out certain manipulations from the beginning. We fixed what we could easily see before EDA and then moved to EDA. This phase was very important because several features were removed and added, new ones were created etc.\n\nEDA describes a lot of things about data that happened\nCleaned, sorted, and visualized. Finally, data was prepared for analysis.\n\nFirst in the analysis phase\nThe Jupiter notebook I worked in is Analysis_Main, where I made the main \nmachine-learning manipulations and finally got the game_recommendations CSV file.\nOne cell in this file returns an error, which I intentionally left as is and indicated why.\n\nThe next file is Analysis \u2013 improving, where the game_recommendations created in the previous notebook\nwas used and improved into the file game_recommendations2. (improved the model)\n\nAfter that, the games were already grouped and we got the data\nwhich showed 10 recommendations per game. With this, the system can be considered somewhat complete, but I decided to use the user's data for testing purposes. I took the data from Kaggle, just for testing purposes (scraping steam by a customer was completely limited). This file is called steam-200k where there is data on users. Recommendation System - Hybrid is the file in which the main test is used.\nThe file is hybrid, which means that a collaborative and content-based recommendation approach is used. \n\nIn this notebook, one cell saves only content-based file - user_recommendations_ContentBased.\n\nAfter that I additionally made a Test_Collaborative_ItemBased notebook where only the collaborative approach is implemented, just for testing.\n\nIf the Data is used give credit to the owner.",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "games",
    "video games",
    "data cleaning",
    "data visualization",
    "data analytics",
    "recommender systems"
  ],
  "licenses": [
    {
      "nameNullable": "other",
      "name": "other",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}