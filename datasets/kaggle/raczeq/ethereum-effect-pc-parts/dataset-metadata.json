{
  "id": "raczeq/ethereum-effect-pc-parts",
  "id_no": 30586,
  "datasetSlugNullable": "ethereum-effect-pc-parts",
  "ownerUserNullable": "raczeq",
  "usabilityRatingNullable": 0.9117647058823529,
  "titleNullable": "Ethereum Effect impact on PC parts prices",
  "subtitleNullable": "Data Warehouse for analysis of Ethereum Effect from 2013 to april 2018",
  "descriptionNullable": "`Project is not maintained anymore and probably will never be again. Whole python code used for data scrapping is pasted into a notebook attached to this project. I'm sorry for the inconvenience.`\n\n### Context\n\nData warehouse has been created as a University project throughout 3 months (march - may 2018).\n\nI haven't find any useful databases containing historical prices of many computer parts (CPUs, GPUs and RAMs), so I had to web scrap it from web prices comparison engines:\n\n* [PriceSpy.co.uk](https://pricespy.co.uk)\n* [PCPartPicker.com](https://pcpartpicker.com)\n* [Geizhals.eu](https://geizhals.eu)\n\nFor webscrapping I've used Python with [`BeautifulSoup`](https://pypi.org/project/beautifulsoup4/) library as well as [`PCPartPicker-API`](https://pypi.org/project/PCPartPicker-API/).\n\nStuff that I'd like to add but I have no time to do it:\n\n* Compare RAM prices with raising demand for memory chips in smartphones industry and Data Centers for cloud computing\n* Scrap more price comparison engines\n* Add new dimension for `DIM_PROD_GPU` -&gt; `Series`. I've made it too shallow and my analysis wasn't so great, additional step between `Manufacturer` and `Product Name` would make it easier for analytics. \n\n### Content\n\nDatabase contains data about:\n\n* 15 most popular cryptocurrencies and their rates\n* 1664 CPU Products\n* 2054 GPU Products\n* 3706 RAM Products\n* 6 000 000+ records containing products historical prices \n\n### Acknowledgements\n\nFew redditers who helped me to find some libraries and datasets to get inspired with.\n\n[My request post on r/datasets](https://www.reddit.com/r/datasets/comments/83t0ax/request_gpus_price_history/)\n\n\n### Inspiration\n\nAs a gamer I've seen a huge prices spikes on a GPU market and as I haven't find too many analysis about this phenomenon and because it's very *fresh* I thought that might be a good topic to make a Uni project for a Data Warehouse course.\n\n![GPU Sold Out][1]\n[Photo Source][2]\n\nI release this data online so it won't waste. Maybe you will find some more interesting results that I did. \n\n\n### Installation\n\nUploaded csv files have been dumped from my data warehouse. Below you can see whole ERD diagram\n\nOnly difference: `DIM_REGION` contains one additional column that I didn't include in my data warehouse\n\n![ERD Diagram][3]\n\n\n  [1]: https://static.seekingalpha.com/uploads/2017/7/9/4206551-14996557338232787_origin.jpg\n  [2]: https://seekingalpha.com/article/4087298-ethereum-crypto-currency-gpu-sales-peaked-amd-nvidia\n  [3]: https://i.imgur.com/xStwjPO.jpg",
  "datasetId": 30586,
  "datasetSlug": "ethereum-effect-pc-parts",
  "hasDatasetSlug": true,
  "ownerUser": "raczeq",
  "hasOwnerUser": true,
  "usabilityRating": 0.9117647058823529,
  "hasUsabilityRating": true,
  "totalViews": 20539,
  "totalVotes": 48,
  "totalDownloads": 1868,
  "title": "Ethereum Effect impact on PC parts prices",
  "hasTitle": true,
  "subtitle": "Data Warehouse for analysis of Ethereum Effect from 2013 to april 2018",
  "hasSubtitle": true,
  "description": "`Project is not maintained anymore and probably will never be again. Whole python code used for data scrapping is pasted into a notebook attached to this project. I'm sorry for the inconvenience.`\n\n### Context\n\nData warehouse has been created as a University project throughout 3 months (march - may 2018).\n\nI haven't find any useful databases containing historical prices of many computer parts (CPUs, GPUs and RAMs), so I had to web scrap it from web prices comparison engines:\n\n* [PriceSpy.co.uk](https://pricespy.co.uk)\n* [PCPartPicker.com](https://pcpartpicker.com)\n* [Geizhals.eu](https://geizhals.eu)\n\nFor webscrapping I've used Python with [`BeautifulSoup`](https://pypi.org/project/beautifulsoup4/) library as well as [`PCPartPicker-API`](https://pypi.org/project/PCPartPicker-API/).\n\nStuff that I'd like to add but I have no time to do it:\n\n* Compare RAM prices with raising demand for memory chips in smartphones industry and Data Centers for cloud computing\n* Scrap more price comparison engines\n* Add new dimension for `DIM_PROD_GPU` -&gt; `Series`. I've made it too shallow and my analysis wasn't so great, additional step between `Manufacturer` and `Product Name` would make it easier for analytics. \n\n### Content\n\nDatabase contains data about:\n\n* 15 most popular cryptocurrencies and their rates\n* 1664 CPU Products\n* 2054 GPU Products\n* 3706 RAM Products\n* 6 000 000+ records containing products historical prices \n\n### Acknowledgements\n\nFew redditers who helped me to find some libraries and datasets to get inspired with.\n\n[My request post on r/datasets](https://www.reddit.com/r/datasets/comments/83t0ax/request_gpus_price_history/)\n\n\n### Inspiration\n\nAs a gamer I've seen a huge prices spikes on a GPU market and as I haven't find too many analysis about this phenomenon and because it's very *fresh* I thought that might be a good topic to make a Uni project for a Data Warehouse course.\n\n![GPU Sold Out][1]\n[Photo Source][2]\n\nI release this data online so it won't waste. Maybe you will find some more interesting results that I did. \n\n\n### Installation\n\nUploaded csv files have been dumped from my data warehouse. Below you can see whole ERD diagram\n\nOnly difference: `DIM_REGION` contains one additional column that I didn't include in my data warehouse\n\n![ERD Diagram][3]\n\n\n  [1]: https://static.seekingalpha.com/uploads/2017/7/9/4206551-14996557338232787_origin.jpg\n  [2]: https://seekingalpha.com/article/4087298-ethereum-crypto-currency-gpu-sales-peaked-amd-nvidia\n  [3]: https://i.imgur.com/xStwjPO.jpg",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "global",
    "business",
    "finance",
    "computer science",
    "internet",
    "programming",
    "currencies and foreign exchange"
  ],
  "licenses": [
    {
      "nameNullable": "CC-BY-SA-4.0",
      "name": "CC-BY-SA-4.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}