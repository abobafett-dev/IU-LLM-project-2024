{
  "id": "rafpast/rob-burbea-all-teachings-embedded",
  "id_no": 3509648,
  "datasetSlugNullable": "rob-burbea-all-teachings-embedded",
  "ownerUserNullable": "rafpast",
  "usabilityRatingNullable": 0.7058823529411765,
  "titleNullable": "Rob Burbea all teachings embedded",
  "subtitleNullable": "All teachings from 2005-2012, 2013-2020 embedded with multi-qa-MiniLM-L6-cos-v1",
  "descriptionNullable": "**Background**\nThis dataset contains transcriptions and embeddings of Rob Burbea's teachings, courtesy of the Hermes Amara Foundation. The source text is available in the following Airtable: [Hermes Amara Foundation - Rob Burbea Transcripts](https://airtable.com/shr9OS6jqmWvWTG5g/tblHlCKWIIhZzEFMk/viw3k0IfSo0Dve9ZJ).\n\nInformation about Rob's biography can be found on [dharmaseed.org](https://dharmaseed.org/teacher/210/).\n\nMore about Hermes Amara Foundation [here](https://hermesamara.org/).\n\n**Technical details**\nThe dataset was produced with [ALP](https://github.com/rpast/ALP) - a knowledge-grounded conversational system. It is a Python Flask-based chatbot app that I use to 'talk with' Rob's teachings.\nTeaching transcripts got embedded with _multi-qa-MiniLM-L6-cos-v1_. Here you can find details of the model: https://www.sbert.net/docs/pretrained_models.html\nEach source page got split by token count so each text snippet does not exceed 500 token count so they easily fit BERT based token limit.\nEmbeddings are serialized with Python's pickle module. Use pickle.load to deserialize.\n\n**Usage**\nYou can use this dataset for following tasks:\n* Semantic search over Rob's teachings: find relevant sources to your specific question.\n* Chatbot Development: Use the teachings as a knowledge base to build a chatbot that can provide responses based on Rob's philosophy and teachings. See implementation example in Python: [ALP](https://github.com/rpast/ALP).\n* Knowledge Graphs: Generate a knowledge graph of Rob's teachings, linking various topics, themes, and entities together to create a comprehensive visual depiction of his discourse.\n* Teaching Recommendation Systems: Based on user's past reading and interest, recommend similar teachings by Rob.\netc.\n",
  "datasetId": 3509648,
  "datasetSlug": "rob-burbea-all-teachings-embedded",
  "hasDatasetSlug": true,
  "ownerUser": "rafpast",
  "hasOwnerUser": true,
  "usabilityRating": 0.7058823529411765,
  "hasUsabilityRating": true,
  "totalViews": 265,
  "totalVotes": 2,
  "totalDownloads": 16,
  "title": "Rob Burbea all teachings embedded",
  "hasTitle": true,
  "subtitle": "All teachings from 2005-2012, 2013-2020 embedded with multi-qa-MiniLM-L6-cos-v1",
  "hasSubtitle": true,
  "description": "**Background**\nThis dataset contains transcriptions and embeddings of Rob Burbea's teachings, courtesy of the Hermes Amara Foundation. The source text is available in the following Airtable: [Hermes Amara Foundation - Rob Burbea Transcripts](https://airtable.com/shr9OS6jqmWvWTG5g/tblHlCKWIIhZzEFMk/viw3k0IfSo0Dve9ZJ).\n\nInformation about Rob's biography can be found on [dharmaseed.org](https://dharmaseed.org/teacher/210/).\n\nMore about Hermes Amara Foundation [here](https://hermesamara.org/).\n\n**Technical details**\nThe dataset was produced with [ALP](https://github.com/rpast/ALP) - a knowledge-grounded conversational system. It is a Python Flask-based chatbot app that I use to 'talk with' Rob's teachings.\nTeaching transcripts got embedded with _multi-qa-MiniLM-L6-cos-v1_. Here you can find details of the model: https://www.sbert.net/docs/pretrained_models.html\nEach source page got split by token count so each text snippet does not exceed 500 token count so they easily fit BERT based token limit.\nEmbeddings are serialized with Python's pickle module. Use pickle.load to deserialize.\n\n**Usage**\nYou can use this dataset for following tasks:\n* Semantic search over Rob's teachings: find relevant sources to your specific question.\n* Chatbot Development: Use the teachings as a knowledge base to build a chatbot that can provide responses based on Rob's philosophy and teachings. See implementation example in Python: [ALP](https://github.com/rpast/ALP).\n* Knowledge Graphs: Generate a knowledge graph of Rob's teachings, linking various topics, themes, and entities together to create a comprehensive visual depiction of his discourse.\n* Teaching Recommendation Systems: Based on user's past reading and interest, recommend similar teachings by Rob.\netc.\n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "religion and belief systems"
  ],
  "licenses": [
    {
      "nameNullable": "unknown",
      "name": "unknown",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}