{
  "id": "satwiktanwar/cat-images-classification-dataset",
  "id_no": 3882603,
  "datasetSlugNullable": "cat-images-classification-dataset",
  "ownerUserNullable": "satwiktanwar",
  "usabilityRatingNullable": 0.9375,
  "titleNullable": "Cat Images Classification Dataset",
  "subtitleNullable": "A Simple and Fun Way to Learn Image Classification with Cats for Beginners",
  "descriptionNullable": "The dataset contains two files in h5 format:\n1. test_catvnoncat.h5: It contains 50 test examples of cat and non-cat images\n2. train_catvnoncat.h5: It contains 209 train examples of cat and non-cat images\n\nThe dataset contains images of size 64x64. The task is to classify an image as a cat (1) or not a cat (0). I am going to publish a series of notebooks for this dataset that would demonstrate neural networks from very basic level. Each notebook will build upon the previous one. Stay tuned to learn neural networks with the help of those notebooks!\n\nYou can use the below code snippet to load and visualize the dataset.\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport h5py\nimport os\n\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndef load_data():\n    train_dataset = h5py.File('/kaggle/input/cat-images-classification-dataset/train_catvnoncat.h5', \"r\")\n    train_set_x_orig = np.array(train_dataset[\"train_set_x\"][:]) # your train set features\n    train_set_y_orig = np.array(train_dataset[\"train_set_y\"][:]) # your train set labels\n\n    test_dataset = h5py.File('/kaggle/input/cat-images-classification-dataset/test_catvnoncat.h5', \"r\")\n    test_set_x_orig = np.array(test_dataset[\"test_set_x\"][:]) # your test set features\n    test_set_y_orig = np.array(test_dataset[\"test_set_y\"][:]) # your test set labels\n\n    classes = np.array(test_dataset[\"list_classes\"][:]) # the list of classes\n\n    train_set_y_orig = train_set_y_orig.reshape((1, train_set_y_orig.shape[0]))\n    test_set_y_orig = test_set_y_orig.reshape((1, test_set_y_orig.shape[0]))\n\n    return train_set_x_orig, train_set_y_orig, test_set_x_orig, test_set_y_orig, classes\n\n# load data\ntrain_x_orig, train_y, test_x_orig, test_y, classes = load_data()\n\n# visualize an example image\nindex = 10\nplt.imshow(train_x_orig[index])\nprint (\"y = \" + str(train_y[0,index]) + \". It's a \" + classes[train_y[0,index]].decode(\"utf-8\") +  \" picture.\")\n```\n",
  "datasetId": 3882603,
  "datasetSlug": "cat-images-classification-dataset",
  "hasDatasetSlug": true,
  "ownerUser": "satwiktanwar",
  "hasOwnerUser": true,
  "usabilityRating": 0.9375,
  "hasUsabilityRating": true,
  "totalViews": 330,
  "totalVotes": 2,
  "totalDownloads": 52,
  "title": "Cat Images Classification Dataset",
  "hasTitle": true,
  "subtitle": "A Simple and Fun Way to Learn Image Classification with Cats for Beginners",
  "hasSubtitle": true,
  "description": "The dataset contains two files in h5 format:\n1. test_catvnoncat.h5: It contains 50 test examples of cat and non-cat images\n2. train_catvnoncat.h5: It contains 209 train examples of cat and non-cat images\n\nThe dataset contains images of size 64x64. The task is to classify an image as a cat (1) or not a cat (0). I am going to publish a series of notebooks for this dataset that would demonstrate neural networks from very basic level. Each notebook will build upon the previous one. Stay tuned to learn neural networks with the help of those notebooks!\n\nYou can use the below code snippet to load and visualize the dataset.\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport h5py\nimport os\n\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndef load_data():\n    train_dataset = h5py.File('/kaggle/input/cat-images-classification-dataset/train_catvnoncat.h5', \"r\")\n    train_set_x_orig = np.array(train_dataset[\"train_set_x\"][:]) # your train set features\n    train_set_y_orig = np.array(train_dataset[\"train_set_y\"][:]) # your train set labels\n\n    test_dataset = h5py.File('/kaggle/input/cat-images-classification-dataset/test_catvnoncat.h5', \"r\")\n    test_set_x_orig = np.array(test_dataset[\"test_set_x\"][:]) # your test set features\n    test_set_y_orig = np.array(test_dataset[\"test_set_y\"][:]) # your test set labels\n\n    classes = np.array(test_dataset[\"list_classes\"][:]) # the list of classes\n\n    train_set_y_orig = train_set_y_orig.reshape((1, train_set_y_orig.shape[0]))\n    test_set_y_orig = test_set_y_orig.reshape((1, test_set_y_orig.shape[0]))\n\n    return train_set_x_orig, train_set_y_orig, test_set_x_orig, test_set_y_orig, classes\n\n# load data\ntrain_x_orig, train_y, test_x_orig, test_y, classes = load_data()\n\n# visualize an example image\nindex = 10\nplt.imshow(train_x_orig[index])\nprint (\"y = \" + str(train_y[0,index]) + \". It's a \" + classes[train_y[0,index]].decode(\"utf-8\") +  \" picture.\")\n```\n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "animals",
    "computer science",
    "programming",
    "beginner",
    "image",
    "binary classification",
    "image classification"
  ],
  "licenses": [
    {
      "nameNullable": "Apache 2.0",
      "name": "Apache 2.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}