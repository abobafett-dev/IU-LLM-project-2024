{
  "id": "uetchy/vtuber-livechat",
  "id_no": 1209921,
  "datasetSlugNullable": "vtuber-livechat",
  "ownerUserNullable": "uetchy",
  "usabilityRatingNullable": 1.0,
  "titleNullable": "VTuber 1B: Live Chat and Moderation Statistics",
  "subtitleNullable": "Virtual YouTubers Live Chat Statistics",
  "descriptionNullable": "**VTuber 1B** is a dataset for large-scale academic research, collecting over a billion live chats, superchats, and moderation events (bans/deletions) from virtual YouTubers' live streams.\n\nSee [GitHub](https://github.com/sigvt/vtuber-livechat-dataset) and join `#livechat-dataset` channel on [SIGVT Discord](https://sigvt.org/discord) for discussions.\n\n&gt; We also offer [\u2764\ufe0f\u200d\ud83e\ude79 Sensai](https://github.com/sigvt/sensai-dataset), a live chat dataset specifically made for building ML models for spam detection / toxic chat classification.\n\n## Provenance\n\n- **Source:** YouTube live chat events collected by our [Honeybee](https://github.com/sigvt/honeybee) cluster. [Holodex](https://holodex.net) is a stream index provider for Honeybee which covers Hololive, Nijisanji, 774inc, etc.\n- **Temporal Coverage:**\n  - Chats: from 2021-01-15\n  - Super chats: from 2021-03-16\n- **Update Frequency:**\n  - At least once every 6 months\n\n## Research Ideas\n\n- Toxic Chat Classification\n- Spam Detection\n- Demographic Visualization\n- Superchat Analysis\n- Training neural language models\n\nSee public notebooks built on [VTuber 1B](https://www.kaggle.com/uetchy/vtuber-livechat/code) and [VTuber 1B Elements](https://www.kaggle.com/uetchy/vtuber-livechat-elements/code) for ideas.\n\n&gt; We employed [Honeybee](https://github.com/sigvt/honeybee) cluster to collect real-time live chat events across major Vtubers' live streams. All sensitive data such as author name or author profile image are omitted from the dataset, and author channel id is anonymized by SHA-1 hashing algorithm with a grain of salt.\n\n## Editions\n\n### VTuber 1B Elements\n\n[Kaggle Datasets](https://www.kaggle.com/uetchy/vtuber-livechat-elements) (2 MB)\n\nVTuber 1B Elements is most suitable for statistical visualizations and explanatory data analysis.\n\n| filename              | summary               |\n| --------------------- | --------------------- |\n| `channels.csv`        | Channel index         |\n| `chat_stats.csv`      | Chat statistics       |\n| `superchat_stats.csv` | Super Chat statistics |\n\n### VTuber 1B\n\n[Kaggle Datasets](https://www.kaggle.com/uetchy/vtuber-livechat)\n\nVTuber 1B is most suitable for frequency analysis. This edition includes only the essential columns in order to reduce dataset size and make it faster fro Kaggle Kernels to load data in.\n\n| filename                   | summary                            |\n| -------------------------- | ---------------------------------- |\n| `chats_%Y-%m.parquet`      | Live chat events (&gt; 1,000,000,000) |\n| `superchats_%Y-%m.parquet` | Super chat events (&gt; 4,000,000)    |\n| `deletion_events.parquet`  | Deletion events                    |\n| `ban_events.parquet`       | Ban events                         |\n\n## Dataset Breakdown\n\n&gt; Ban and deletion are equivalent to `markChatItemsByAuthorAsDeletedAction` and `markChatItemAsDeletedAction` respectively.\n\n### Chats (`chats_%Y-%m.csv`)\n\n| column          | type             | description                 | in standard version   |\n| --------------- | ---------------- | --------------------------- | --------------------- |\n| timestamp       | string           | ISO 8601 UTC timestamp      | limited accuracy      |\n| id              | string           | chat id                     | N/A                   |\n| authorName      | string           | author name                 | N/A                   |\n| authorChannelId | string           | author channel id           | anonymized            |\n| body            | string           | chat message                | N/A                   |\n| bodyLength      | number           | chat message length         | standard version only |\n| membership      | string           | membership status           | N/A                   |\n| isMember        | nullable boolean | is member (null if unknown) | standard version only |\n| isModerator     | boolean          | is channel moderator        | N/A                   |\n| isVerified      | boolean          | is verified account         | N/A                   |\n| videoId         | string           | source video id             |                       |\n| channelId       | string           | source channel id           |                       |\n\n#### Membership status\n\n| value      | duration                  |\n| ---------- | ------------------------- |\n| unknown    | Indistinguishable         |\n| non-member | 0                         |\n| new        | &lt; 1 month                 |\n| 1 month    | &gt;= 1 month, &lt; 2 months    |\n| 2 months   | &gt;= 2 months, &lt; 6 months   |\n| 6 months   | &gt;= 6 months, &lt; 12 months  |\n| 1 year     | &gt;= 12 months, &lt; 24 months |\n| 2 years    | &gt;= 24 months              |\n\n#### Pandas usage\n\nSet `keep_default_na` to `False` and `na_values` to `''` in `read_csv`. Otherwise, chat message like `NA` would incorrectly be treated as NaN value.\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\n```\n\n### Superchats (`chats_:year:-:month:.csv`)\n\n| column          | type            | description                  | in standard version |\n| --------------- | --------------- | ---------------------------- | ------------------- |\n| timestamp       | string          | ISO 8601 UTC timestamp       | limited accuracy    |\n| id              | string          | chat id                      | N/A                 |\n| authorName      | string          | author name                  | N/A                 |\n| authorChannelId | string          | author channel id            | anonymized          |\n| body            | nullable string | chat message                 | N/A                 |\n| amount          | number          | purchased amount             |                     |\n| currency        | string          | three-letter currency symbol |                     |\n| color           | string          | color                        | N/A                 |\n| significance    | number          | significance                 |                     |\n| videoId         | string          | source video id              | N/A                 |\n| channelId       | string          | source channel id            |                     |\n\n#### Color and Significance\n\n| color     | significance | purchase amount (\u00a5) | purchase amount ($) | max. message length |\n| --------- | ------------ | ------------------- | ------------------- | ------------------- |\n| blue      | 1            | \u00a5 100 - 199         | $ 1.00 - 1.99       | 0                   |\n| lightblue | 2            | \u00a5 200 - 499         | $ 2.00 - 4.99       | 50                  |\n| green     | 3            | \u00a5 500 - 999         | $ 5.00 - 9.99       | 150                 |\n| yellow    | 4            | \u00a5 1000 - 1999       | $ 10.00 - 19.99     | 200                 |\n| orange    | 5            | \u00a5 2000 - 4999       | $ 20.00 - 49.99     | 225                 |\n| magenta   | 6            | \u00a5 5000 - 9999       | $ 50.00 - 99.99     | 250                 |\n| red       | 7            | \u00a5 10000 - 50000     | $ 100.00 - 500.00   | 270 - 350           |\n\n#### Pandas usage\n\n```python\nimport pandas as pd\nfrom glob import iglob\n\nsc = pd.concat([\n    pd.read_parquet(f)\n    for f in iglob('../input/vtuber-livechat/superchats_*.parquet')\n],\n               ignore_index=False)\nsc.sort_index(inplace=True)\n```\n\n### Deletion Events (`deletion_events.csv`)\n\n| column    | type    | description                  | in standard version |\n| --------- | ------- | ---------------------------- | ------------------- |\n| timestamp | string  | UTC timestamp                |                     |\n| id        | string  | chat id                      |                     |\n| retracted | boolean | is deleted by author oneself |                     |\n| videoId   | string  | source video id              |                     |\n| channelId | string  | source channel id            |                     |\n\n#### Pandas usage\n\nInsert `deleted_by_mod` column to `chats` DataFrame:\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\ndelet = pd.read_parquet('../input/vtuber-livechat/deletion_events.parquet')\n\ndelet = delet[delet['retracted'] == 0]\n\ndelet['deleted_by_mod'] = True\nchats = pd.merge(chats, delet[['id', 'deleted_by_mod']], how='left')\nchats['deleted_by_mod'].fillna(False, inplace=True)\n```\n\n### Ban Events (`ban_events.csv`)\n\nHere **Ban** means either to place user in time out or to permanently hide the user's comments on the channel's current and future live streams. This mixup is due to the fact that these actions are indistinguishable from others with the extracted data from `markChatItemsByAuthorAsDeletedAction` event.\n\n| column          | type   | description       | in standard version |\n| --------------- | ------ | ----------------- | ------------------- |\n| timestamp       | string | UTC timestamp     |                     |\n| authorChannelId | string | channel id        | anonymized          |\n| videoId         | string | source video id   |                     |\n| channelId       | string | source channel id |                     |\n\n#### Pandas usage\n\nInsert `banned` column to `chats` DataFrame:\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\nban = pd.read_parquet('../input/vtuber-livechat/ban_events.parquet')\n\nban['banned'] = True\nchats = pd.merge(chats, ban, on=['authorChannelId', 'videoId'], how='left')\nchats['banned'].fillna(False, inplace=True)\n```\n\n## Consideration\n\n### Anonymization\n\n`id` and `authorChannelId` are anonymized by SHA-1 hashing algorithm with a pinch of undisclosed salt.\n\n### Handling Custom Emojis\n\nAll custom emojis are replaced with a Unicode replacement character \ufffd (`U+FFFD`).\n\n### Redundant Ban and Deletion Events\n\nBans and deletions from multiple moderators for the same person or chat will be logged separately. For simplicity, you can safely ignore all but the first line recorded in time order.\n\n## Citation\n\n```latex\n@misc{vtuber-livechat-dataset,\n author={Yasuaki Uechi},\n title={VTuber 1B: Large-scale Live Chat and Moderation Events Dataset},\n year={2022},\n month={2},\n version={37},\n url={https://sigvt.org/vtuber-1b}\n}\n```\n\n## License\n\n- Code: [MIT License](https://github.com/sigvt/vtuber-livechat-dataset/blob/master/LICENSE)\n- Dataset: [ODC Public Domain Dedication and Licence (PDDL)](https://opendatacommons.org/licenses/pddl/1-0/index.html)\n",
  "datasetId": 1209921,
  "datasetSlug": "vtuber-livechat",
  "hasDatasetSlug": true,
  "ownerUser": "uetchy",
  "hasOwnerUser": true,
  "usabilityRating": 1.0,
  "hasUsabilityRating": true,
  "totalViews": 33917,
  "totalVotes": 49,
  "totalDownloads": 3723,
  "title": "VTuber 1B: Live Chat and Moderation Statistics",
  "hasTitle": true,
  "subtitle": "Virtual YouTubers Live Chat Statistics",
  "hasSubtitle": true,
  "description": "**VTuber 1B** is a dataset for large-scale academic research, collecting over a billion live chats, superchats, and moderation events (bans/deletions) from virtual YouTubers' live streams.\n\nSee [GitHub](https://github.com/sigvt/vtuber-livechat-dataset) and join `#livechat-dataset` channel on [SIGVT Discord](https://sigvt.org/discord) for discussions.\n\n&gt; We also offer [\u2764\ufe0f\u200d\ud83e\ude79 Sensai](https://github.com/sigvt/sensai-dataset), a live chat dataset specifically made for building ML models for spam detection / toxic chat classification.\n\n## Provenance\n\n- **Source:** YouTube live chat events collected by our [Honeybee](https://github.com/sigvt/honeybee) cluster. [Holodex](https://holodex.net) is a stream index provider for Honeybee which covers Hololive, Nijisanji, 774inc, etc.\n- **Temporal Coverage:**\n  - Chats: from 2021-01-15\n  - Super chats: from 2021-03-16\n- **Update Frequency:**\n  - At least once every 6 months\n\n## Research Ideas\n\n- Toxic Chat Classification\n- Spam Detection\n- Demographic Visualization\n- Superchat Analysis\n- Training neural language models\n\nSee public notebooks built on [VTuber 1B](https://www.kaggle.com/uetchy/vtuber-livechat/code) and [VTuber 1B Elements](https://www.kaggle.com/uetchy/vtuber-livechat-elements/code) for ideas.\n\n&gt; We employed [Honeybee](https://github.com/sigvt/honeybee) cluster to collect real-time live chat events across major Vtubers' live streams. All sensitive data such as author name or author profile image are omitted from the dataset, and author channel id is anonymized by SHA-1 hashing algorithm with a grain of salt.\n\n## Editions\n\n### VTuber 1B Elements\n\n[Kaggle Datasets](https://www.kaggle.com/uetchy/vtuber-livechat-elements) (2 MB)\n\nVTuber 1B Elements is most suitable for statistical visualizations and explanatory data analysis.\n\n| filename              | summary               |\n| --------------------- | --------------------- |\n| `channels.csv`        | Channel index         |\n| `chat_stats.csv`      | Chat statistics       |\n| `superchat_stats.csv` | Super Chat statistics |\n\n### VTuber 1B\n\n[Kaggle Datasets](https://www.kaggle.com/uetchy/vtuber-livechat)\n\nVTuber 1B is most suitable for frequency analysis. This edition includes only the essential columns in order to reduce dataset size and make it faster fro Kaggle Kernels to load data in.\n\n| filename                   | summary                            |\n| -------------------------- | ---------------------------------- |\n| `chats_%Y-%m.parquet`      | Live chat events (&gt; 1,000,000,000) |\n| `superchats_%Y-%m.parquet` | Super chat events (&gt; 4,000,000)    |\n| `deletion_events.parquet`  | Deletion events                    |\n| `ban_events.parquet`       | Ban events                         |\n\n## Dataset Breakdown\n\n&gt; Ban and deletion are equivalent to `markChatItemsByAuthorAsDeletedAction` and `markChatItemAsDeletedAction` respectively.\n\n### Chats (`chats_%Y-%m.csv`)\n\n| column          | type             | description                 | in standard version   |\n| --------------- | ---------------- | --------------------------- | --------------------- |\n| timestamp       | string           | ISO 8601 UTC timestamp      | limited accuracy      |\n| id              | string           | chat id                     | N/A                   |\n| authorName      | string           | author name                 | N/A                   |\n| authorChannelId | string           | author channel id           | anonymized            |\n| body            | string           | chat message                | N/A                   |\n| bodyLength      | number           | chat message length         | standard version only |\n| membership      | string           | membership status           | N/A                   |\n| isMember        | nullable boolean | is member (null if unknown) | standard version only |\n| isModerator     | boolean          | is channel moderator        | N/A                   |\n| isVerified      | boolean          | is verified account         | N/A                   |\n| videoId         | string           | source video id             |                       |\n| channelId       | string           | source channel id           |                       |\n\n#### Membership status\n\n| value      | duration                  |\n| ---------- | ------------------------- |\n| unknown    | Indistinguishable         |\n| non-member | 0                         |\n| new        | &lt; 1 month                 |\n| 1 month    | &gt;= 1 month, &lt; 2 months    |\n| 2 months   | &gt;= 2 months, &lt; 6 months   |\n| 6 months   | &gt;= 6 months, &lt; 12 months  |\n| 1 year     | &gt;= 12 months, &lt; 24 months |\n| 2 years    | &gt;= 24 months              |\n\n#### Pandas usage\n\nSet `keep_default_na` to `False` and `na_values` to `''` in `read_csv`. Otherwise, chat message like `NA` would incorrectly be treated as NaN value.\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\n```\n\n### Superchats (`chats_:year:-:month:.csv`)\n\n| column          | type            | description                  | in standard version |\n| --------------- | --------------- | ---------------------------- | ------------------- |\n| timestamp       | string          | ISO 8601 UTC timestamp       | limited accuracy    |\n| id              | string          | chat id                      | N/A                 |\n| authorName      | string          | author name                  | N/A                 |\n| authorChannelId | string          | author channel id            | anonymized          |\n| body            | nullable string | chat message                 | N/A                 |\n| amount          | number          | purchased amount             |                     |\n| currency        | string          | three-letter currency symbol |                     |\n| color           | string          | color                        | N/A                 |\n| significance    | number          | significance                 |                     |\n| videoId         | string          | source video id              | N/A                 |\n| channelId       | string          | source channel id            |                     |\n\n#### Color and Significance\n\n| color     | significance | purchase amount (\u00a5) | purchase amount ($) | max. message length |\n| --------- | ------------ | ------------------- | ------------------- | ------------------- |\n| blue      | 1            | \u00a5 100 - 199         | $ 1.00 - 1.99       | 0                   |\n| lightblue | 2            | \u00a5 200 - 499         | $ 2.00 - 4.99       | 50                  |\n| green     | 3            | \u00a5 500 - 999         | $ 5.00 - 9.99       | 150                 |\n| yellow    | 4            | \u00a5 1000 - 1999       | $ 10.00 - 19.99     | 200                 |\n| orange    | 5            | \u00a5 2000 - 4999       | $ 20.00 - 49.99     | 225                 |\n| magenta   | 6            | \u00a5 5000 - 9999       | $ 50.00 - 99.99     | 250                 |\n| red       | 7            | \u00a5 10000 - 50000     | $ 100.00 - 500.00   | 270 - 350           |\n\n#### Pandas usage\n\n```python\nimport pandas as pd\nfrom glob import iglob\n\nsc = pd.concat([\n    pd.read_parquet(f)\n    for f in iglob('../input/vtuber-livechat/superchats_*.parquet')\n],\n               ignore_index=False)\nsc.sort_index(inplace=True)\n```\n\n### Deletion Events (`deletion_events.csv`)\n\n| column    | type    | description                  | in standard version |\n| --------- | ------- | ---------------------------- | ------------------- |\n| timestamp | string  | UTC timestamp                |                     |\n| id        | string  | chat id                      |                     |\n| retracted | boolean | is deleted by author oneself |                     |\n| videoId   | string  | source video id              |                     |\n| channelId | string  | source channel id            |                     |\n\n#### Pandas usage\n\nInsert `deleted_by_mod` column to `chats` DataFrame:\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\ndelet = pd.read_parquet('../input/vtuber-livechat/deletion_events.parquet')\n\ndelet = delet[delet['retracted'] == 0]\n\ndelet['deleted_by_mod'] = True\nchats = pd.merge(chats, delet[['id', 'deleted_by_mod']], how='left')\nchats['deleted_by_mod'].fillna(False, inplace=True)\n```\n\n### Ban Events (`ban_events.csv`)\n\nHere **Ban** means either to place user in time out or to permanently hide the user's comments on the channel's current and future live streams. This mixup is due to the fact that these actions are indistinguishable from others with the extracted data from `markChatItemsByAuthorAsDeletedAction` event.\n\n| column          | type   | description       | in standard version |\n| --------------- | ------ | ----------------- | ------------------- |\n| timestamp       | string | UTC timestamp     |                     |\n| authorChannelId | string | channel id        | anonymized          |\n| videoId         | string | source video id   |                     |\n| channelId       | string | source channel id |                     |\n\n#### Pandas usage\n\nInsert `banned` column to `chats` DataFrame:\n\n```python\nchats = pd.read_parquet('../input/vtuber-livechat/chats_2021-03.parquet')\nban = pd.read_parquet('../input/vtuber-livechat/ban_events.parquet')\n\nban['banned'] = True\nchats = pd.merge(chats, ban, on=['authorChannelId', 'videoId'], how='left')\nchats['banned'].fillna(False, inplace=True)\n```\n\n## Consideration\n\n### Anonymization\n\n`id` and `authorChannelId` are anonymized by SHA-1 hashing algorithm with a pinch of undisclosed salt.\n\n### Handling Custom Emojis\n\nAll custom emojis are replaced with a Unicode replacement character \ufffd (`U+FFFD`).\n\n### Redundant Ban and Deletion Events\n\nBans and deletions from multiple moderators for the same person or chat will be logged separately. For simplicity, you can safely ignore all but the first line recorded in time order.\n\n## Citation\n\n```latex\n@misc{vtuber-livechat-dataset,\n author={Yasuaki Uechi},\n title={VTuber 1B: Large-scale Live Chat and Moderation Events Dataset},\n year={2022},\n month={2},\n version={37},\n url={https://sigvt.org/vtuber-1b}\n}\n```\n\n## License\n\n- Code: [MIT License](https://github.com/sigvt/vtuber-livechat-dataset/blob/master/LICENSE)\n- Dataset: [ODC Public Domain Dedication and Licence (PDDL)](https://opendatacommons.org/licenses/pddl/1-0/index.html)\n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "arts and entertainment",
    "computer science",
    "internet",
    "text",
    "online communities",
    "social networks"
  ],
  "licenses": [
    {
      "nameNullable": "ODC Public Domain Dedication and Licence (PDDL)",
      "name": "ODC Public Domain Dedication and Licence (PDDL)",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}