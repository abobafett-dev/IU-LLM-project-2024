{
  "id": "valentynsichkar/traffic-signs-dataset-in-yolo-format",
  "id_no": 513560,
  "datasetSlugNullable": "traffic-signs-dataset-in-yolo-format",
  "ownerUserNullable": "valentynsichkar",
  "usabilityRatingNullable": 0.9375,
  "titleNullable": "Traffic Signs Dataset in YOLO format",
  "subtitleNullable": "Annotations of bounding boxes in txt files next to every image",
  "descriptionNullable": "### \ud83c\udf93  Related Course for Detection Tasks\n **Training YOLO v3 for Objects Detection with Custom Data.** *Build your own detector by labelling, training and testing on image, video and in real time with camera.* **Join** here: [https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/](https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/?referralCode=A283956A57327E37DDAD)\n\n### \ud83c\udfa5 Trained Results\nDetections on video and image are shown below. **Trained weights** can be found in the course mentioned above.\n\n![Video](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fbcdae0b57021d6ac3e86a9aa2e8c4b08%2Fts_detections.gif?generation=1581700736851192&alt=media \"Detections of Traffic Signs on Video\")\n\n![Image](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2F20ca377934c5ed5f8c1e4272c838b01a%2Fts_detections.jpg?generation=1581701085754638&alt=media \"Detections of Traffic Signs on Image\")\n\n### \ud83d\udea9 Concept Map of the Course\n![Concept Map of the Course](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fc51fc6aba2c0cd6d22512f486880868a%2FConcept_map_YOLO_3.png?generation=1584694252456677&alt=media \"Concept Map of the Course YOLO v3\")\n\n### \ud83d\udc49 Join the Course\n[https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/](https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/?referralCode=A283956A57327E37DDAD)\n\n### Related Dataset for Classification Tasks\nExplore one more dataset used for classification tasks here: [https://www.kaggle.com/valentynsichkar/traffic-signs-preprocessed](https://www.kaggle.com/valentynsichkar/traffic-signs-preprocessed)\n\n### About this Dataset for Detection Tasks\nThis is ready to use Traffic Signs Dataset in YOLO format for Detection tasks. It can be used for training as well as for testing. Dataset consists of images in `*.jpg` format and `*.txt` files next to every image that have the same names as images files have. These `*.txt` files include annotations of bounding boxes of Traffic Sings in the YOLO format:\n<br>`[Class Number] [center in x] [center in y] [Width] [Height]`\n\nFor example, file `00001.txt` includes three bounding boxes (each in a new line) that describe three Traffic Signs in `00001.jpg` image:\n<br>`2 0.7378676470588236 0.5125 0.030147058823529412 0.055`\n<br>`2 0.3044117647058823 0.65375 0.041176470588235294 0.0725`\n<br>`3 0.736764705882353 0.453125 0.04264705882352941 0.06875`\n\nTraffic Sins in this Dataset are grouped into four categories:\n<br>`prohibitory`\n<br>`danger`\n<br>`mandatory`\n<br>`other`\n\n**Prohibitory** category consists of following Traffic Signs: `speed limit`, `no overtaking`, `no traffic both ways`, `no trucks`.\n<br>**Danger** category consists of following Traffic Sings: `priority at next intersection`, `danger`, `bend left`, `bend right`,  `bend`, `uneven road`, `slippery road`,  `road narrows`, `construction`, `traffic signal`,  `pedestrian crossing`, `school crossing`, `cycles crossing`,  `snow`, `animals`.\n<br>**Mandatory** category consists of following Traffic Sings: `go right`, `go left`, `go straight`, `go right or straight`, `go left or straight`, `keep right`, `keep left`, `roundabout`.\n<br>**Other** category consists of following Traffic Sings: `restriction ends`, `priority road`, `give way`, `stop`, `no entry`.\n\nDataset itself is in `zip` archive and organization is as following:\n<br>`+--ts/`\n<br>`|          00000.txt`\n<br>`|          00000.jpg`\n<br>`|          00001.txt`\n<br>`|          00001.jpg`\n<br>`|          ...`\n\nTo train in Darknet framework, dataset is accompanied with following files:\n<br>`ts_data.data`\n<br>`classes.names`\n<br>`train.txt`\n<br>`test.txt`\n<br>`yolov3_ts_test.cfg`\n<br>`yolov3_ts_train.cfg`\n\nPay attention! You need to specify yours full paths before use these additional files. Find more details in the course mentioned above. Also, you can use especially designed Python file to get full path `getting-full-path.py`.\n\n### mAP Results\n\nHere is testing results after training in Darknet framework on this dataset. Total number of iterations are `8000`. For training used `631 images` and for validation during training used `112 images`.\n\n**mAP** (mean average precision), calculated on test images, is as following:\n<br>`total number detections` = 270\n<br>`prohibitory`, ap (average precision) = 97.22% (TP = 78, FP = 2)\n<br>`danger`, ap (average precision) = 100.00% (TP = 24, FP = 0)\n<br>`mandatory`, ap (average precision) = 94.50% (TP = 23, FP = 2)\n<br>`other`, ap (average precision) = 97.10% (TP = 39, FP = 1)\n\n**mAP** = 97.21 %\n \n### Acknowledgements\nInitial data is German Traffic Sign Detection Benchmark (GTDRB).",
  "datasetId": 513560,
  "datasetSlug": "traffic-signs-dataset-in-yolo-format",
  "hasDatasetSlug": true,
  "ownerUser": "valentynsichkar",
  "hasOwnerUser": true,
  "usabilityRating": 0.9375,
  "hasUsabilityRating": true,
  "totalViews": 103603,
  "totalVotes": 133,
  "totalDownloads": 16194,
  "title": "Traffic Signs Dataset in YOLO format",
  "hasTitle": true,
  "subtitle": "Annotations of bounding boxes in txt files next to every image",
  "hasSubtitle": true,
  "description": "### \ud83c\udf93  Related Course for Detection Tasks\n **Training YOLO v3 for Objects Detection with Custom Data.** *Build your own detector by labelling, training and testing on image, video and in real time with camera.* **Join** here: [https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/](https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/?referralCode=A283956A57327E37DDAD)\n\n### \ud83c\udfa5 Trained Results\nDetections on video and image are shown below. **Trained weights** can be found in the course mentioned above.\n\n![Video](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fbcdae0b57021d6ac3e86a9aa2e8c4b08%2Fts_detections.gif?generation=1581700736851192&alt=media \"Detections of Traffic Signs on Video\")\n\n![Image](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2F20ca377934c5ed5f8c1e4272c838b01a%2Fts_detections.jpg?generation=1581701085754638&alt=media \"Detections of Traffic Signs on Image\")\n\n### \ud83d\udea9 Concept Map of the Course\n![Concept Map of the Course](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fc51fc6aba2c0cd6d22512f486880868a%2FConcept_map_YOLO_3.png?generation=1584694252456677&alt=media \"Concept Map of the Course YOLO v3\")\n\n### \ud83d\udc49 Join the Course\n[https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/](https://www.udemy.com/course/training-yolo-v3-for-objects-detection-with-custom-data/?referralCode=A283956A57327E37DDAD)\n\n### Related Dataset for Classification Tasks\nExplore one more dataset used for classification tasks here: [https://www.kaggle.com/valentynsichkar/traffic-signs-preprocessed](https://www.kaggle.com/valentynsichkar/traffic-signs-preprocessed)\n\n### About this Dataset for Detection Tasks\nThis is ready to use Traffic Signs Dataset in YOLO format for Detection tasks. It can be used for training as well as for testing. Dataset consists of images in `*.jpg` format and `*.txt` files next to every image that have the same names as images files have. These `*.txt` files include annotations of bounding boxes of Traffic Sings in the YOLO format:\n<br>`[Class Number] [center in x] [center in y] [Width] [Height]`\n\nFor example, file `00001.txt` includes three bounding boxes (each in a new line) that describe three Traffic Signs in `00001.jpg` image:\n<br>`2 0.7378676470588236 0.5125 0.030147058823529412 0.055`\n<br>`2 0.3044117647058823 0.65375 0.041176470588235294 0.0725`\n<br>`3 0.736764705882353 0.453125 0.04264705882352941 0.06875`\n\nTraffic Sins in this Dataset are grouped into four categories:\n<br>`prohibitory`\n<br>`danger`\n<br>`mandatory`\n<br>`other`\n\n**Prohibitory** category consists of following Traffic Signs: `speed limit`, `no overtaking`, `no traffic both ways`, `no trucks`.\n<br>**Danger** category consists of following Traffic Sings: `priority at next intersection`, `danger`, `bend left`, `bend right`,  `bend`, `uneven road`, `slippery road`,  `road narrows`, `construction`, `traffic signal`,  `pedestrian crossing`, `school crossing`, `cycles crossing`,  `snow`, `animals`.\n<br>**Mandatory** category consists of following Traffic Sings: `go right`, `go left`, `go straight`, `go right or straight`, `go left or straight`, `keep right`, `keep left`, `roundabout`.\n<br>**Other** category consists of following Traffic Sings: `restriction ends`, `priority road`, `give way`, `stop`, `no entry`.\n\nDataset itself is in `zip` archive and organization is as following:\n<br>`+--ts/`\n<br>`|          00000.txt`\n<br>`|          00000.jpg`\n<br>`|          00001.txt`\n<br>`|          00001.jpg`\n<br>`|          ...`\n\nTo train in Darknet framework, dataset is accompanied with following files:\n<br>`ts_data.data`\n<br>`classes.names`\n<br>`train.txt`\n<br>`test.txt`\n<br>`yolov3_ts_test.cfg`\n<br>`yolov3_ts_train.cfg`\n\nPay attention! You need to specify yours full paths before use these additional files. Find more details in the course mentioned above. Also, you can use especially designed Python file to get full path `getting-full-path.py`.\n\n### mAP Results\n\nHere is testing results after training in Darknet framework on this dataset. Total number of iterations are `8000`. For training used `631 images` and for validation during training used `112 images`.\n\n**mAP** (mean average precision), calculated on test images, is as following:\n<br>`total number detections` = 270\n<br>`prohibitory`, ap (average precision) = 97.22% (TP = 78, FP = 2)\n<br>`danger`, ap (average precision) = 100.00% (TP = 24, FP = 0)\n<br>`mandatory`, ap (average precision) = 94.50% (TP = 23, FP = 2)\n<br>`other`, ap (average precision) = 97.10% (TP = 39, FP = 1)\n\n**mAP** = 97.21 %\n \n### Acknowledgements\nInitial data is German Traffic Sign Detection Benchmark (GTDRB).",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "artificial intelligence",
    "classification",
    "deep learning",
    "image",
    "multiclass classification"
  ],
  "licenses": [
    {
      "nameNullable": "other",
      "name": "other",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}