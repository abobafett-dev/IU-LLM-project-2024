{
  "id": "valentynsichkar/traffic-signs-preprocessed",
  "id_no": 327959,
  "datasetSlugNullable": "traffic-signs-preprocessed",
  "ownerUserNullable": "valentynsichkar",
  "usabilityRatingNullable": 1.0,
  "titleNullable": "Traffic Signs Preprocessed",
  "subtitleNullable": "Different techniques for preprocessing",
  "descriptionNullable": "### \ud83d\udcf0 Related Papers\n1. Sichkar V. N. **Real time detection and classification of traffic signs based on YOLO version 3 algorithm**. Scientific and Technical Journal of Information Technologies, Mechanics and Optics, 2020, vol. 20, no. 3, pp. 418\u2013424. DOI: 10.17586/2226-1494-2020-20-3-418-424 (Full-text available on ResearchGate here: [Real time detection and classification of traffic signs based on YOLO version 3 algorithm](https://www.researchgate.net/publication/342638954_Real_time_detection_and_classification_of_traffic_signs_based_on_YOLO_version_3_algorithm)\n\n2. Sichkar V. N. **Effect of various dimension convolutional layer filters on traffic sign classification accuracy**. Scientific and Technical Journal of Information Technologies, Mechanics and Optics, 2019, vol. 19, no. 3, pp. 546\u2013552. DOI: 10.17586/2226-1494-2019-19-3-546-552 (Full-text available on ResearchGate here: [Effect of various dimension convolutional layer filters on traffic sign classification accuracy](https://www.researchgate.net/publication/334074308_Effect_of_various_dimension_convolutional_layer_filters_on_traffic_sign_classification_accuracy)\n\n### :mortar_board: Related course for classification tasks\n\n**Design**, **Train** & **Test** deep CNN for Image Classification. Join the course & enjoy new opportunities to get deep learning skills:\n[https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/](https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/?referralCode=12EE0D74A405BF4DDE9B)\n\n![CNN Course](https://github.com/sichkar-valentyn/1-million-images-for-Traffic-Signs-Classification-tasks/blob/main/images/slideshow_classification.gif?raw=true =470x516 \"CNN Course\")\n\n<br>\n\n### \ud83d\uddfa\ufe0f Concept Map of the Course\n![Concept map](https://github.com/sichkar-valentyn/1-million-images-for-Traffic-Signs-Classification-tasks/blob/main/images/concept_map.png?raw=true =570x410 \"Concept map\")\n\n<br>\n\n### \ud83d\udc49 Join the Course\n[https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/](https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/?referralCode=12EE0D74A405BF4DDE9B)\n\n<br>\n\n### Related Dataset for Detection Tasks\nExplore one more dataset used for detection tasks here: [https://www.kaggle.com/valentynsichkar/traffic-signs-dataset-in-yolo-format](https://www.kaggle.com/valentynsichkar/traffic-signs-dataset-in-yolo-format)\n\n### About this Dataset for Classification Tasks\nThis is ready to use preprocessed data for Traffic Signs saved into the nine `pickle` files.\n<br>Original datasets are in the following files:\n<br>- train.pickle\n<br>- valid.pickle\n<br>- test.pickle\n\n<br>Code with detailed description on how datasets were preprocessed is in **datasets_preparing.py**\n\n<br>Before preprocessing training dataset was **equalized** making examples in the classes equal as it is shown on the figure below. Histogram of **43 classes** for training dataset with their number of examples for Traffic Signs Classification before and after equalization by adding transformated images (brightness and rotation) from original dataset. After equalization, training dataset has increased up to **86989** examples.\n\n<br>![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fb5d9f0189353832e769c2bdd8e25243d%2Fhistogram.png?generation=1567275066871451&alt=media)\n\n<br>Resulted preprocessed nine files are as follows:\n<br>- data0.pickle - Shuffling\n<br>- data1.pickle - Shuffling, /255.0 Normalization\n<br>- data2.pickle - Shuffling, /255.0 + Mean Normalization\n<br>- data3.pickle - Shuffling, /255.0 + Mean + STD Normalization\n<br>- data4.pickle - Grayscale, Shuffling\n<br>- data5.pickle - Grayscale, Shuffling, Local Histogram Equalization\n<br>- data6.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 Normalization\n<br>- data7.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 + Mean Normalization\n<br>- data8.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 + Mean + STD Normalization\n\n<br>Datasets data0 - data3 have **RGB images** and datasets data4 - data8 have **Gray images**.\n\n<br>Shapes of **data0 - data3** are as following (RGB):\n<br>- x_train: (86989, 3, 32, 32)\n<br>- y_train: (86989,)\n<br>- x_validation: (4410, 3, 32, 32)\n<br>- y_validation: (4410,)\n<br>- x_test: (12630, 3, 32, 32)\n<br>- y_test: (12630,)\n\n<br>Shapes of **data4 - data8** are as following (Gray):\n<br>- x_train: (86989, 1, 32, 32)\n<br>- y_train: (86989,)\n<br>- x_validation: (4410, 1, 32, 32)\n<br>- y_validation: (4410,)\n<br>- x_test: (12630, 1, 32, 32)\n<br>- y_test: (12630,)\n\n<br>`mean image` and `standard deviation` were calculated from `train dataset` and applied to validation and testing datasets for appropriate datasets. When using user's image for classification, it has to be preprocessed firstly in the same way and in the same order according to the chosen dataset among nine.\n\n### Test online\nExperiment online with custom Traffic Sign here: [https://valentynsichkar.name/traffic_signs.html](https://valentynsichkar.name/traffic_signs.html)\n\n### Acknowledgements\nInitial data is German Traffic Sign Recognition Benchmarks (GTSRB).",
  "datasetId": 327959,
  "datasetSlug": "traffic-signs-preprocessed",
  "hasDatasetSlug": true,
  "ownerUser": "valentynsichkar",
  "hasOwnerUser": true,
  "usabilityRating": 1.0,
  "hasUsabilityRating": true,
  "totalViews": 137417,
  "totalVotes": 288,
  "totalDownloads": 14688,
  "title": "Traffic Signs Preprocessed",
  "hasTitle": true,
  "subtitle": "Different techniques for preprocessing",
  "hasSubtitle": true,
  "description": "### \ud83d\udcf0 Related Papers\n1. Sichkar V. N. **Real time detection and classification of traffic signs based on YOLO version 3 algorithm**. Scientific and Technical Journal of Information Technologies, Mechanics and Optics, 2020, vol. 20, no. 3, pp. 418\u2013424. DOI: 10.17586/2226-1494-2020-20-3-418-424 (Full-text available on ResearchGate here: [Real time detection and classification of traffic signs based on YOLO version 3 algorithm](https://www.researchgate.net/publication/342638954_Real_time_detection_and_classification_of_traffic_signs_based_on_YOLO_version_3_algorithm)\n\n2. Sichkar V. N. **Effect of various dimension convolutional layer filters on traffic sign classification accuracy**. Scientific and Technical Journal of Information Technologies, Mechanics and Optics, 2019, vol. 19, no. 3, pp. 546\u2013552. DOI: 10.17586/2226-1494-2019-19-3-546-552 (Full-text available on ResearchGate here: [Effect of various dimension convolutional layer filters on traffic sign classification accuracy](https://www.researchgate.net/publication/334074308_Effect_of_various_dimension_convolutional_layer_filters_on_traffic_sign_classification_accuracy)\n\n### :mortar_board: Related course for classification tasks\n\n**Design**, **Train** & **Test** deep CNN for Image Classification. Join the course & enjoy new opportunities to get deep learning skills:\n[https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/](https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/?referralCode=12EE0D74A405BF4DDE9B)\n\n![CNN Course](https://github.com/sichkar-valentyn/1-million-images-for-Traffic-Signs-Classification-tasks/blob/main/images/slideshow_classification.gif?raw=true =470x516 \"CNN Course\")\n\n<br>\n\n### \ud83d\uddfa\ufe0f Concept Map of the Course\n![Concept map](https://github.com/sichkar-valentyn/1-million-images-for-Traffic-Signs-Classification-tasks/blob/main/images/concept_map.png?raw=true =570x410 \"Concept map\")\n\n<br>\n\n### \ud83d\udc49 Join the Course\n[https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/](https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/?referralCode=12EE0D74A405BF4DDE9B)\n\n<br>\n\n### Related Dataset for Detection Tasks\nExplore one more dataset used for detection tasks here: [https://www.kaggle.com/valentynsichkar/traffic-signs-dataset-in-yolo-format](https://www.kaggle.com/valentynsichkar/traffic-signs-dataset-in-yolo-format)\n\n### About this Dataset for Classification Tasks\nThis is ready to use preprocessed data for Traffic Signs saved into the nine `pickle` files.\n<br>Original datasets are in the following files:\n<br>- train.pickle\n<br>- valid.pickle\n<br>- test.pickle\n\n<br>Code with detailed description on how datasets were preprocessed is in **datasets_preparing.py**\n\n<br>Before preprocessing training dataset was **equalized** making examples in the classes equal as it is shown on the figure below. Histogram of **43 classes** for training dataset with their number of examples for Traffic Signs Classification before and after equalization by adding transformated images (brightness and rotation) from original dataset. After equalization, training dataset has increased up to **86989** examples.\n\n<br>![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F3400968%2Fb5d9f0189353832e769c2bdd8e25243d%2Fhistogram.png?generation=1567275066871451&alt=media)\n\n<br>Resulted preprocessed nine files are as follows:\n<br>- data0.pickle - Shuffling\n<br>- data1.pickle - Shuffling, /255.0 Normalization\n<br>- data2.pickle - Shuffling, /255.0 + Mean Normalization\n<br>- data3.pickle - Shuffling, /255.0 + Mean + STD Normalization\n<br>- data4.pickle - Grayscale, Shuffling\n<br>- data5.pickle - Grayscale, Shuffling, Local Histogram Equalization\n<br>- data6.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 Normalization\n<br>- data7.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 + Mean Normalization\n<br>- data8.pickle - Grayscale, Shuffling, Local Histogram Equalization, /255.0 + Mean + STD Normalization\n\n<br>Datasets data0 - data3 have **RGB images** and datasets data4 - data8 have **Gray images**.\n\n<br>Shapes of **data0 - data3** are as following (RGB):\n<br>- x_train: (86989, 3, 32, 32)\n<br>- y_train: (86989,)\n<br>- x_validation: (4410, 3, 32, 32)\n<br>- y_validation: (4410,)\n<br>- x_test: (12630, 3, 32, 32)\n<br>- y_test: (12630,)\n\n<br>Shapes of **data4 - data8** are as following (Gray):\n<br>- x_train: (86989, 1, 32, 32)\n<br>- y_train: (86989,)\n<br>- x_validation: (4410, 1, 32, 32)\n<br>- y_validation: (4410,)\n<br>- x_test: (12630, 1, 32, 32)\n<br>- y_test: (12630,)\n\n<br>`mean image` and `standard deviation` were calculated from `train dataset` and applied to validation and testing datasets for appropriate datasets. When using user's image for classification, it has to be preprocessed firstly in the same way and in the same order according to the chosen dataset among nine.\n\n### Test online\nExperiment online with custom Traffic Sign here: [https://valentynsichkar.name/traffic_signs.html](https://valentynsichkar.name/traffic_signs.html)\n\n### Acknowledgements\nInitial data is German Traffic Sign Recognition Benchmarks (GTSRB).",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "classification",
    "deep learning",
    "cnn",
    "image",
    "multiclass classification"
  ],
  "licenses": [
    {
      "nameNullable": "other",
      "name": "other",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}