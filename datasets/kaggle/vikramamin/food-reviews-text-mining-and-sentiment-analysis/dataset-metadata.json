{
  "id": "vikramamin/food-reviews-text-mining-and-sentiment-analysis",
  "id_no": 3589987,
  "datasetSlugNullable": "food-reviews-text-mining-and-sentiment-analysis",
  "ownerUserNullable": "vikramamin",
  "usabilityRatingNullable": 0.7647058823529411,
  "titleNullable": "Food Reviews - Text Mining & Sentiment Analysis",
  "subtitleNullable": "Sentiment of food review",
  "descriptionNullable": "Brief Description:\n- The Chief Marketing Officer (CMO) of Healthy Foods Inc. wants to understand customer sentiments about the specialty foods that the company offers. This information has been collected through customer reviews on their website. Dataset consists of about 5000 reviews. They want the answers to the following questions:\n1. What are the most frequently used words in the customer reviews?\n2. How can the data be prepared for text analysis?\n3. What are the overall sentiments towards the products?\n\n- We will be using text mining and sentiment analysis (R programming) to offer insights to the CMO with regards to the food reviews\n\nSteps:\n- Set the working directory and read the data.\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fd7ec6c7460b58ae39c96d5431cca2d37%2FPicture1.png?generation=1691146783504075&alt=media)\n- Data cleaning. Check for missing values and data types of variables\n- Run the required libraries (\"tm\", \"SnowballC\", \"dplyr\", \"sentimentr\", \"wordcloud2\", \"RColorBrewer\")\n- TEXT ACQUISITION and AGGREGATION. Create corpus. \n- TEXT PRE-PROCESSING. Cleaning the text\n- Replace special characters with \" \". We use the tm_map function for this purpose\n- make all the alphabets lower case\n- remove punctuations\n- remove whitespace\n- remove stopwords\n- remove numbers\n- stem the document\n- create term document matrix\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F0508dfd5df9b1ed2885e1eea35b84f30%2FPicture2.png?generation=1691147153582115&alt=media)\n- convert into matrix and find out frequency of words\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Febc729e81068856dec368667c5758995%2FPicture3.png?generation=1691147243385812&alt=media)\n- convert into a data frame\n- TEXT EXPLORATION find out the words which appear most frequently and least frequently\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F33cf5decc039baf96dbe86dd6964792a%2FTop%205%20frequent%20words.jpeg?generation=1691147382783191&alt=media)\n- Create Wordcloud\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F99f1147bd9e9a4e6bb35686b015fc714%2FWordCloud.png?generation=1691147502824379&alt=media)\n\n- TEXT MODELLING\n- Word association between two words which tend to appear more number of times. Here we try to find the association for the top three occurring words \"like\", \"tast\", \"flavor\" by setting a correlation limit of 0.2\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fbfdbfbe28a30012f0e7ab54d6185c223%2FPicture4.png?generation=1691147754149529&alt=media)\n- \"like\" has an association with \"realli\" (they appear about 25% of the time together), dont (24%), one(21%)\n- \"tast\" does not have an association with any word with the set correlation limit\n- \"flavor\" has an association with the word \"chip\"(they appear about 27% of the time together)\n- Sentiment analysis\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fa5da1dd46a60494ec9b26fa1a08b2087%2FPicture5.png?generation=1691147897889137&alt=media)\n- element_id refers to the Review No and sentence_id refers to the Sentence No in the review , word_count refers to the number of words part of that sentence in that review. Sentiment would be either positive or negative.\n- Let us find out the overall sentiment score of all the reviews\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F6fce0e810d47ea8864ebac58eca1be99%2FPicture6.png?generation=1691148149575056&alt=media)\n- This indicates that the entire food review document has a marginally positive score\n- Let us find out the sentiment score for each of the 5000 reviews. \n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F5b7861d5ebc3881483dd65a8385a539c%2FPicture7.png?generation=1691148278877972&alt=media)\n- (-1) indicates the most extreme negative sentiment and (+1) indicates the most extreme positive sentiment\n- Let us create a separate data frame for all the negative sentiments. In total there are 726 negative sentiments out of the total 5000 reviews (approx 15%). \n",
  "datasetId": 3589987,
  "datasetSlug": "food-reviews-text-mining-and-sentiment-analysis",
  "hasDatasetSlug": true,
  "ownerUser": "vikramamin",
  "hasOwnerUser": true,
  "usabilityRating": 0.7647058823529411,
  "hasUsabilityRating": true,
  "totalViews": 482,
  "totalVotes": 1,
  "totalDownloads": 77,
  "title": "Food Reviews - Text Mining & Sentiment Analysis",
  "hasTitle": true,
  "subtitle": "Sentiment of food review",
  "hasSubtitle": true,
  "description": "Brief Description:\n- The Chief Marketing Officer (CMO) of Healthy Foods Inc. wants to understand customer sentiments about the specialty foods that the company offers. This information has been collected through customer reviews on their website. Dataset consists of about 5000 reviews. They want the answers to the following questions:\n1. What are the most frequently used words in the customer reviews?\n2. How can the data be prepared for text analysis?\n3. What are the overall sentiments towards the products?\n\n- We will be using text mining and sentiment analysis (R programming) to offer insights to the CMO with regards to the food reviews\n\nSteps:\n- Set the working directory and read the data.\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fd7ec6c7460b58ae39c96d5431cca2d37%2FPicture1.png?generation=1691146783504075&alt=media)\n- Data cleaning. Check for missing values and data types of variables\n- Run the required libraries (\"tm\", \"SnowballC\", \"dplyr\", \"sentimentr\", \"wordcloud2\", \"RColorBrewer\")\n- TEXT ACQUISITION and AGGREGATION. Create corpus. \n- TEXT PRE-PROCESSING. Cleaning the text\n- Replace special characters with \" \". We use the tm_map function for this purpose\n- make all the alphabets lower case\n- remove punctuations\n- remove whitespace\n- remove stopwords\n- remove numbers\n- stem the document\n- create term document matrix\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F0508dfd5df9b1ed2885e1eea35b84f30%2FPicture2.png?generation=1691147153582115&alt=media)\n- convert into matrix and find out frequency of words\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Febc729e81068856dec368667c5758995%2FPicture3.png?generation=1691147243385812&alt=media)\n- convert into a data frame\n- TEXT EXPLORATION find out the words which appear most frequently and least frequently\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F33cf5decc039baf96dbe86dd6964792a%2FTop%205%20frequent%20words.jpeg?generation=1691147382783191&alt=media)\n- Create Wordcloud\n\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F99f1147bd9e9a4e6bb35686b015fc714%2FWordCloud.png?generation=1691147502824379&alt=media)\n\n- TEXT MODELLING\n- Word association between two words which tend to appear more number of times. Here we try to find the association for the top three occurring words \"like\", \"tast\", \"flavor\" by setting a correlation limit of 0.2\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fbfdbfbe28a30012f0e7ab54d6185c223%2FPicture4.png?generation=1691147754149529&alt=media)\n- \"like\" has an association with \"realli\" (they appear about 25% of the time together), dont (24%), one(21%)\n- \"tast\" does not have an association with any word with the set correlation limit\n- \"flavor\" has an association with the word \"chip\"(they appear about 27% of the time together)\n- Sentiment analysis\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2Fa5da1dd46a60494ec9b26fa1a08b2087%2FPicture5.png?generation=1691147897889137&alt=media)\n- element_id refers to the Review No and sentence_id refers to the Sentence No in the review , word_count refers to the number of words part of that sentence in that review. Sentiment would be either positive or negative.\n- Let us find out the overall sentiment score of all the reviews\n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F6fce0e810d47ea8864ebac58eca1be99%2FPicture6.png?generation=1691148149575056&alt=media)\n- This indicates that the entire food review document has a marginally positive score\n- Let us find out the sentiment score for each of the 5000 reviews. \n![](https://www.googleapis.com/download/storage/v1/b/kaggle-user-content/o/inbox%2F10868729%2F5b7861d5ebc3881483dd65a8385a539c%2FPicture7.png?generation=1691148278877972&alt=media)\n- (-1) indicates the most extreme negative sentiment and (+1) indicates the most extreme positive sentiment\n- Let us create a separate data frame for all the negative sentiments. In total there are 726 negative sentiments out of the total 5000 reviews (approx 15%). \n",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "business"
  ],
  "licenses": [
    {
      "nameNullable": "CC0-1.0",
      "name": "CC0-1.0",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}